2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 08:36:09  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 08:36:10.229(Timestamp), null, 31883(Integer)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 08:36:10.228(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:10  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 08:36:11  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:11  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:11  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 08:36:12  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 08:36:13  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:36:15  DEBUG [18589261@qtp-2775646-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 08:36:15  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 08:36:16  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:16  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 08:36:16  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:36:17  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice WHERE name = ? 
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 时效提醒(String)
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payment WHERE user_id = ? and deal_status = ? and del_flag = ? and deal_Name like CONCAT('%',?,'%') order by id desc 
2013-08-29 08:36:25  DEBUG [23500093@qtp-2775646-8] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 0(String), 0(String), 时效提醒(String)
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:36:26  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice WHERE id = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 6(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_accountUser where user_id = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_dredgeservice t where user_id = ? and service_id = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 6(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:36:29  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:41:33  DEBUG [29609363@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:46:36  DEBUG [4188535@qtp-2775646-12] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:51:40  DEBUG [26805492@qtp-2775646-16] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 08:56:44  DEBUG [32938295@qtp-2775646-19] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:01:46  DEBUG [1801249@qtp-2775646-21] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:05:53  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:53  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_dredgeservice t where user_id = ? and service_id = ? and flag = ? 
2013-08-29 09:05:53  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 5(Integer), 1(String)
2013-08-29 09:05:53  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 09:05:53  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:05:54  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:05:55  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 09:05:59  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 09:06:06  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:06:06  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 09:06:06  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 09:06:13  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:06:13  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:13  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255924(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:17  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:17  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 09:06:19  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:19  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255949(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:19  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:19  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255949(String)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255952(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255952(String)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255914(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255914(String)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2989905610(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 2989905610(String)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255897(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:20  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255897(String)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255971(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 6375255971(String)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 5307496554(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 5307496554(String)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 5307496533(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 5307496533(String)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 9015813763(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 09:06:21  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 9015813763(String)
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:06:22  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:07:23  DEBUG [13206327@qtp-2775646-24] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:12:25  DEBUG [16702321@qtp-2775646-28] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:17:28  DEBUG [26522356@qtp-2775646-31] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:22:32  DEBUG [23471401@qtp-2775646-35] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:27:36  DEBUG [31535774@qtp-2775646-39] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:32:40  DEBUG [55334@qtp-2775646-43] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:37:44  DEBUG [32539087@qtp-2775646-47] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:42:49  DEBUG [4241272@qtp-2775646-52] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:47:53  DEBUG [12891771@qtp-2775646-56] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:52:56  DEBUG [15579557@qtp-2775646-59] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 09:57:59  DEBUG [19397067@qtp-2775646-61] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:03:04  DEBUG [18044905@qtp-2775646-66] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:08:09  DEBUG [20967014@qtp-2775646-71] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:13:11  DEBUG [8924570@qtp-2775646-73] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:18:15  DEBUG [14572145@qtp-2775646-77] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:23:18  DEBUG [28818897@qtp-2775646-80] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:28:23  DEBUG [30607083@qtp-2775646-85] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:33:24  DEBUG [11381862@qtp-2775646-86] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:38:28  DEBUG [16192174@qtp-2775646-91] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:43:31  DEBUG [5750776@qtp-2775646-95] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:48:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:53:33  DEBUG [12433471@qtp-2775646-98] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 10:58:35  DEBUG [32861625@qtp-2775646-99] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:39:28  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:39:29  DEBUG [29990318@qtp-21761200-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 13:40:03.616(Timestamp), null, 31883(Integer)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 13:40:03.616(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:03  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 13:40:04  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:40:06  DEBUG [2002478@qtp-21761200-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 13:40:06  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:40:10  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:10  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 13:40:10  DEBUG [24384208@qtp-21761200-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:40:11  DEBUG [21133685@qtp-21761200-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:40:20  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:20  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 13:40:20  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 13:40:21  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:21  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 13:40:21  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:40:24  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:24  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 13:40:24  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:40:26  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:27  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 13:40:27  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 13:40:39  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:40:39  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 13:40:39  DEBUG [19937265@qtp-21761200-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 13:43:13  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:13  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 13:43:13  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 13:43:14.177(Timestamp), null, 31883(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 13:43:14.176(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:14  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 13:43:15  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:43:16  DEBUG [2714653@qtp-18854209-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 13:43:16  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:43:18  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 13:43:22  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 13:43:24  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:24  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 13:43:24  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 13:43:30  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:43:30  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 13:43:30  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255924(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 13:43:30  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 13:43:30  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:48:31  DEBUG [26179333@qtp-18854209-9] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:50:59  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 13:50:59  DEBUG [26498545@qtp-18854209-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255949(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 13:50:59  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy55.getOrderByMailNo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy56.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.getOrderByMailNo(OrderDaoImpl.java:269)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1366)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:527)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy98.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	... 89 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 13:52:34  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	... 134 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 13:52:34  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy55.getOrderByMailNo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy56.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.getOrderByMailNo(OrderDaoImpl.java:269)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1366)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:527)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy98.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	... 89 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:53:34  DEBUG [32912386@qtp-18854209-13] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 13:54:00  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	... 134 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 13:54:00  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy55.getOrderByMailNo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy56.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.getOrderByMailNo(OrderDaoImpl.java:269)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1366)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:527)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy98.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	... 89 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 13:58:39  DEBUG [30400341@qtp-18854209-18] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:03:43  DEBUG [20579248@qtp-18854209-22] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:07:50  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	... 134 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 14:07:50  ERROR [26498545@qtp-18854209-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy55.getOrderByMailNo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy56.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.getOrderByMailNo(OrderDaoImpl.java:269)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1366)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:527)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy98.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 449,138 milliseconds ago.  The last packet sent successfully to the server was 449,355 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2696)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2105)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1367)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.execute(NewProxyPreparedStatement.java:989)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:45)
	at $Proxy317.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:39)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:41)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	... 89 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 148 more
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:13:19  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String)
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:13:33  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 14:13:42.787(Timestamp), null, 31883(Integer)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 14:13:42.786(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:42  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 14:13:43  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:13:44  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 14:13:45  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:13:48  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), K22000014(String), 2(String)
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:13:50  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:13:51  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:51  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:13:51  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 14:13:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 14:13:56  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:13:56  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 14:13:56  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 14:13:57  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 14:13:57  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480261(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 14:13:57  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:13:57  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:15:22  DEBUG [5931231@qtp-27252033-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:15:42  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:15:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:15:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:15:54  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255924(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:15:55  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:15:55  DEBUG [15408262@qtp-27252033-2] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 14:17:40.903(Timestamp), null, 31883(Integer)
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 14:17:40  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 14:17:40.903(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:17:41  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 14:17:42  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:17:43  DEBUG [32764267@qtp-23107602-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 14:17:43  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:17:45  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 14:17:47  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:17:48  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:17:59  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:18:00  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:18:00  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6375255924(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:18:13  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:18:13  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 14:21:27  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:21:27  ERROR [29549291@qtp-23107602-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy65.queryQuestionnaireManageList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy66.queryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.dao.impl.QuestionnaireDaoImpl.queryQuestionnaireManageList(QuestionnaireDaoImpl.java:181)
	at net.ytoec.kernel.service.impl.QuestionnaireServiceImpl.vipQueryQuestionnaireManageList(QuestionnaireServiceImpl.java:668)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy176.vipQueryQuestionnaireManageList(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
2013-08-29 14:21:32  DEBUG [29549291@qtp-23107602-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:21:32  ERROR [29549291@qtp-23107602-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy316.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:40)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:243)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:117)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:79)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:73)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:189)
	at org.apache.ibatis.binding.MapperMethod.executeForList(MapperMethod.java:100)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:70)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy55.getOrderByMailNo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy56.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.getOrderByMailNo(OrderDaoImpl.java:269)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1366)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:527)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.getOrderByMailNo(OrderServiceImpl.java:1)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy98.getOrderByMailNo(Unknown Source)
	at net.ytoec.kernel.service.impl.PassManageServiceImpl.searPassIssue(PassManageServiceImpl.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at net.ytoec.kernel.interceptor.PerfInterceptor.invoke(PerfInterceptor.java:28)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy186.searPassIssue(Unknown Source)
	at net.ytoec.kernel.action.passIssueManage.PassManageAction.warnningIndex(PassManageAction.java:376)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:450)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:289)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:252)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at net.ytoec.kernel.interceptor.FilterInterceptor.doIntercept(FilterInterceptor.java:138)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:50:13  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 14:50:19.356(Timestamp), null, 31883(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 14:50:19.355(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:19  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 14:50:20  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:50:21  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 14:50:22  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:50:23  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:23  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 14:50:23  DEBUG [19711072@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-29 14:50:23  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-29 14:50:24  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:24  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-29 14:50:24  DEBUG [22719756@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(String)
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:50:24  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:50:25  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:25  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 14:50:25  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 14:50:26  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 14:50:27  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:50:27  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:50:27  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:51:52  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:51:52  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:51:52  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 3240346230(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:51:52  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:51:52  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 3240346230(String)
2013-08-29 14:53:16  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:53:16  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480293(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:53:16  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:53:16  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 6377480293(String)
2013-08-29 14:54:40  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:54:40  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377473647(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:54:40  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:54:40  DEBUG [14492785@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 6377473647(String)
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 14:56:05  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 14:56:06.094(Timestamp), null, 31883(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 14:56:06.094(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 14:56:06  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 14:56:07  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:56:08  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 14:56:08  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:56:10  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 14:56:11  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:11  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 14:56:11  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 14:56:11  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 14:56:12  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 3240346230(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 3240346230(String)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480293(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 6377480293(String)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377473647(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:56:18  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 6377473647(String)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480135(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 6377480135(String)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480261(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 6377480261(String)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 14:56:19  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 14:56:20  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 14:56:20  DEBUG [7714233@qtp-7332688-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:01:20  DEBUG [22752902@qtp-7332688-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 15:04:29.574(Timestamp), null, 31883(Integer)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 15:04:29.574(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:29  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 15:04:30  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:04:31  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 15:04:32  DEBUG [23969716@qtp-24630659-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:05:05  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:05  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 15:05:05  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:05:06  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 15:05:07  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 15:05:08  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:08  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 15:05:08  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:05:44  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 15:06:50  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:06:59  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:06:59  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 15:06:59  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:08:19  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:08:19  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 15:08:19  DEBUG [22699221@qtp-24630659-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:10:26  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 15:11:18.294(Timestamp), null, 31883(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 15:11:18.294(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:18  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 15:11:19  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:11:20  DEBUG [14652433@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 15:11:20  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:11:22  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 15:11:24  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 15:11:30  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:30  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 15:11:30  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 15:11:32  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:32  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 15:11:32  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 15:11:40  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:11:40  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 15:11:40  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:13:52  DEBUG [28847974@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:16:30  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:21:35  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 15:26:38  DEBUG [8658191@qtp-16328001-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:01:42  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:01:42.36(Timestamp), null, 23433(Integer)
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 21(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:01:42.36(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:01:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:01:47  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:47  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:47  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 168(Integer)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 21(String)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:01:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 168(Integer)
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:01:51  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:01:52  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:01:52  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-19(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-20(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-21(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-22(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-23(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-24(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-25(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-26(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-27(String)
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-29 18:01:52  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 2013-08-28(String)
2013-08-29 18:01:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-29 18:01:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 21(String)
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 168(Integer)
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:01:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:02:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_warn_order w WHERE w.create_time between ? and ? AND w.receive_branch_id=? AND w.msg_status=? order by w.create_time desc 
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2013-07-29 19:02:00(String), 2013-08-29 19:02:01(String), 200076(String), 0(String)
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_warn_order w WHERE w.create_time between ? and ? AND w.receive_branch_id=? AND w.msg_status=? order by w.create_time desc limit ?, ? 
2013-08-29 18:02:01  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2013-07-29 19:02:00(String), 2013-08-29 19:02:01(String), 200076(String), 0(String), 0(Integer), 10(Integer)
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 168(Integer)
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:01  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@5b89(String)
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-29 18:02:30  DEBUG [188411@qtp-19543910-8] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:01:42.0(Timestamp), 2013-08-29 18:02:30.416(Timestamp), 23433(Integer), 2053394(Integer)
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:02:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:02:32  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:02:33.312(Timestamp), null, 31883(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 18:02:33.312(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:02:33  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 18:02:34  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@7c8b(String)
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-29 18:02:37  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K38111175:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-17 10:25:33.0(Timestamp), 2013-08-29 18:02:37.794(Timestamp), 31883(Integer), 2052543(Integer)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:02:44.551(Timestamp), null, 23433(Integer)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:02:44.551(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:44  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:02:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:02:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:02:45  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:46  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:02:48  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:02:55  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:02:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:02:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:02:59  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:03:08  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:08  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:03:08  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:03:11  DEBUG [17899769@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:03:16  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:03:16  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:03:16  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:03:16  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:03:16  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:03  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:03  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:03  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 北京(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 天津(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 河北省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 山西省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 内蒙古自治区(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 辽宁省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 吉林省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 黑龙江省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 上海(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 江苏省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 浙江省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:04  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 安徽省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 福建省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 江西省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 山东省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 河南省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 湖北省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 湖南省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 广东省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 广西壮族自治区(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 海南省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 重庆(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 四川省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 贵州省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 云南省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 西藏自治区(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 陕西省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 甘肃省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 青海省(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 宁夏回族自治区(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:04:05  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 新疆维吾尔自治区(String), 1(String), 2013-08-29 18:04:03.032(Timestamp), null, null
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:04:12  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:04:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:19  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:27  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:27  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:04:27  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:28  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:31  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:39  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:39  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:04:39  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:40  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:41  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:41  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:41  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:41  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:41  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:43  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:04:56  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:56  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:04:56  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:04:57  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:57  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:04:57  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:04:58  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:05:00  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:05:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:05:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:05:14  DEBUG [31829758@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:09:22  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:09:23.01(Timestamp), null, 23433(Integer)
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:09:23.01(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:23  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:24  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:09:25  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:09:27  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:09:27  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:27  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:27  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:09:28  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_POSTTEMPUSER WHERE vipId = ? 
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:29  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:09:30  DEBUG [5378543@qtp-2775646-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:09:32  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:09:41  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:09:41  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:09:41  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:10:52  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:10:52  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:10:52  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:10:53  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:10:53  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:10:53  DEBUG [9832908@qtp-2775646-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:10:53  DEBUG [19478135@qtp-2775646-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:14:55  DEBUG [4975752@qtp-2775646-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:18:08  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:18:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:18:14  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:14  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:18:14  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:18:15  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:18:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:18:45  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_warnvalue set destination=?,warn_value=?,update_time=? where id=? 
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 北京(String), 2(String), 2013-08-29 18:19:00.829(Timestamp), 33(Integer)
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:19:00  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:19:02  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:19:05  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:05  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:19:05  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:19:06  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:19:09  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:19:13  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:20:03  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:20:04  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:20:27  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:20:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:20:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:20:44  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:21:23  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:21:23  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:21:23  DEBUG [8675172@qtp-2775646-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:24:30.408(Timestamp), null, 23433(Integer)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:24:30.408(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:30  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:24:31  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:24:32  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:24:32  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:24:32  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:24:32  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:25:25  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:25  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:25:25  DEBUG [30516583@qtp-30397466-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:25:25  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:25:26  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:25:34  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:34  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:25:34  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:25:39  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:25:48  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:48  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:25:48  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:25:56  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:25:56  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:25:56  DEBUG [19478135@qtp-30397466-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:27:26.621(Timestamp), null, 23433(Integer)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:27:26.621(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:26  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:27:27  DEBUG [26630033@qtp-16328001-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:27:29  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:27:29  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:29  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:29  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:27:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:27:32  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:27:44  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 北京(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 天津(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 河北省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 山西省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 内蒙古自治区(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 辽宁省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 吉林省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 黑龙江省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 上海(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 江苏省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 浙江省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 安徽省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 福建省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 江西省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 山东省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 河南省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 湖北省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 湖南省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 广东省(String), 1(String), 2013-08-29 18:28:30.313(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 广西壮族自治区(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 海南省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 重庆(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 四川省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 贵州省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 云南省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 西藏自治区(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 陕西省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 甘肃省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 青海省(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 宁夏回族自治区(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 新疆维吾尔自治区(String), 1(String), 2013-08-29 18:28:30.314(Timestamp), null, null
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:28:30  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:28:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:28:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:28:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:28:31  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:28:38  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:28:39  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:28:39  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:29:02  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:29:03  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:29:03  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:03  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:29:03  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:29:04  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:29:06  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:29:06  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:29:06  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:29:06  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: null, K02000004(String), 北京(String), 1(String), 2013-08-29 18:29:09.034(Timestamp), null, null
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:29:09  DEBUG [29311073@qtp-16328001-3] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:29:09  DEBUG [9832908@qtp-16328001-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:30:31  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:30:32  DEBUG [22752902@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:30:33  DEBUG [9353209@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:30:33  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:33  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:33  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:33  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:30:34  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:30:35  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:36  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:37  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:40  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:41  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:41  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_dredgeservice t where user_id = ? and service_id = ? and flag = ? 
2013-08-29 18:31:41  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), 5(Integer), 1(String)
2013-08-29 18:31:41  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:31:41  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:42  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:31:43  DEBUG [23254862@qtp-6934496-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:33:34.89(Timestamp), null, 23433(Integer)
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:33:34  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:33:34.89(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:33:35  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:33:36  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:33:37  DEBUG [23661946@qtp-10176168-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:33:37  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:37  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:37  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:33:38  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:33:39  DEBUG [29344932@qtp-10176168-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:37:44.487(Timestamp), null, 23433(Integer)
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:37:44  DEBUG [6362866@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:37:44.487(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:44  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:37:45  DEBUG [25863847@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:37:49  DEBUG [187532@qtp-22784850-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:37:50  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:50  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:50  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:37:52  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:37:53  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:37:53  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:37:53  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:38:01  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:01  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:38:01  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:38:17  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:17  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:38:17  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:38:18  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:18  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:38:18  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255949(String)
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255952(String)
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:24  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255914(String)
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 2989905610(String)
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255897(String)
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 6375255971(String)
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:25  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 5307496554(String)
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 5307496533(String)
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 9015813763(String)
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:38:26  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:43:28  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:44:02  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:44:03  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:44:09  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:09  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:44:09  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:44:30  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:44:30  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:44:30  DEBUG [3076080@qtp-22784850-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:45:30  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:45:31.008(Timestamp), null, 23433(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:45:31.008(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:45:31  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:45:32  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:33  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:45:35  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:45:36  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:36  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:45:36  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:45:40  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:46:01  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:01  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:46:01  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:46:43  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:43  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:46:43  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:46:48  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:46:50  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:50  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:46:50  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:46:50  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:46:50  DEBUG [414027@qtp-15194720-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:46:52  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:46:52  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:52  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 18:46:52  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:52  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255949(String)
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255952(String)
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255914(String)
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 2989905610(String)
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:53  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255897(String)
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 6375255971(String)
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 5307496554(String)
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 5307496533(String)
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:46:54  DEBUG [24220068@qtp-15194720-8] (Slf4jImpl.java:28) - ==> Parameters: 9015813763(String)
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:48:01  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:48:02.03(Timestamp), null, 23433(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:48:02.03(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:02  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:48:03  DEBUG [25760621@qtp-9632368-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:48:04  DEBUG [33045386@qtp-9632368-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 18:48:04  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:48:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:48:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:48:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:48:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:48:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:48:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:48:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:48:16  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:48:45  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:45  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:48:45  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 200076(String)
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:48:46  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-05-31(String), 2013-08-30(String)
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:49:05  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:49:06  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:49:07  DEBUG [14201902@qtp-9632368-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:50:43.519(Timestamp), null, 23433(Integer)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:50:43.519(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:43  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:50:44  DEBUG [27937716@qtp-22784850-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:50:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:50:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:50:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:46  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:50:46  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 18:50:46  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:50:47  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:47  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:50:47  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:50:48  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:50:49  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:50:50  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:50  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:50:50  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:50:50  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:50:50  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:50:55  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:50:57  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:51:01  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:51:02  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 18:51:43  DEBUG [30330327@qtp-22784850-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-05-31(String), 2013-08-30(String)
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:51:43  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:51:44  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:51:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:51:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:51:45  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_warn_order w WHERE w.report_user_id=? AND w.create_time between ? and ? order by w.create_time desc 
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 2013-07-29 19:52:24(String), 2013-08-29 19:52:24(String)
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_warn_order w WHERE w.report_user_id=? AND w.create_time between ? and ? order by w.create_time desc limit ?, ? 
2013-08-29 18:52:24  DEBUG [12050527@qtp-22784850-7] (Slf4jImpl.java:28) - ==> Parameters: 200076(String), 2013-07-29 19:52:24(String), 2013-08-29 19:52:24(String), 0(Integer), 10(Integer)
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:52:24  DEBUG [10425539@qtp-22784850-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:53:57  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:53:57  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:53:57  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:53:58  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:54:02  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:54:02  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:54:02  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255924(String)
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255949(String)
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255952(String)
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:04  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255914(String)
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 2989905610(String)
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255897(String)
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 6375255971(String)
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:05  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 5307496554(String)
2013-08-29 18:55:06  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:06  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 5307496533(String)
2013-08-29 18:55:06  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 18:55:06  DEBUG [26498545@qtp-15070162-3] (Slf4jImpl.java:28) - ==> Parameters: 9015813763(String)
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:55:07  DEBUG [1919950@qtp-15070162-2] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 18:55:58.653(Timestamp), null, 23433(Integer)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 18:55:58.653(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:58  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 18:55:59  DEBUG [11505322@qtp-15194720-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:56:01  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 18:56:01  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 18:56:16  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:16  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:56:16  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:56:17  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 18:56:18  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 18:56:23  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:56:23  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:56:23  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:56:23  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:56:23  DEBUG [23537900@qtp-15194720-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), K02000004(String), 2(String)
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_USER_CUSTOM(user_name, binded_user_name, customer_id, type, relational_query, field001, field002, field003) VALUES(?, ?, ?, ?, ?, ?, ?, ?) 
2013-08-29 18:58:03  DEBUG [15153557@qtp-15194720-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), K02000004(String), 1395(String), 2(String), 2(String), null, null, null
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:58:04  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER_CUSTOM SET update_time=now() ,relational_query=? ,field002 = ? WHERE user_name = ? and binded_user_name = ? and type = ? 
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 2(String), 1(String), K02000004(String), K02000004(String), 2(String)
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), K02000004(String), 2(String)
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:58:05  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 18:58:06  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 18:58:10  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:10  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:58:10  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:58:11  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:58:11  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:58:11  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:11  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 18:58:11  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3203810707(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 18:58:12  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 18:59:37  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 18:59:37  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253215422(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 19:01:01  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:01:01  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253220964(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 19:02:25  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:02:25  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 7165595663(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 19:03:49  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:03:49  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253011937(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 19:05:13  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:05:13  DEBUG [27347936@qtp-15194720-10] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253011226(String), 2013-08-27(String), 2013-08-30(String)
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:06:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:06:42.134(Timestamp), null, 31883(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13917742484(String), 天津(String), 天津市(String), 和平区(String), aaaa(String), M(String), 老鹰集团1店(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 22002901(String), 老鹰集团1店(String), K22000014(String), 2013-08-29 19:06:42.134(Timestamp), 032d02b130f5feb91e60e4ce25868c94(String), null, null, null, null, null, null, 31883(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:06:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 31883(Integer)
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:06:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer)
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:06:44  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:06:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:06:49  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:49  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:06:49  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:06:50  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:06:51  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t where t.parent_id = 0 and t.id not in ( ? , ? , ? ) 
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 710000(Integer), 810000(Integer), 820000(Integer)
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:06:59  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 北京(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 天津(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 河北省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 山西省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 内蒙古自治区(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 辽宁省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 吉林省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 黑龙江省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 上海(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 江苏省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 浙江省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 安徽省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 福建省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:44  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 江西省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 山东省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 河南省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 湖北省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 湖南省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 广东省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 广西壮族自治区(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 海南省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 重庆(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 四川省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 贵州省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 云南省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 西藏自治区(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 陕西省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 甘肃省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 青海省(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 宁夏回族自治区(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_warnvalue(id,seller_id,destination,warn_value,create_time,update_time,extends1) values(?,?,?,?,?,?,?); 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 新疆维吾尔自治区(String), 1(String), 2013-08-29 19:07:44.867(Timestamp), null, null
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 31883(Integer), 时效提醒(String)
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:07:45  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:07:56  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:07:56  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:07:56  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 3240346230(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 3240346230(String)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480293(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 6377480293(String)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480135(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:08:06  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 6377480135(String)
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480261(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 6377480261(String)
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31883(Integer)
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:08:07  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@7c8b(String)
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-29 19:08:36  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@7c8b(String), K38111175:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-17 10:25:33.0(Timestamp), 2013-08-29 19:08:36.294(Timestamp), 31883(Integer), 2052543(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:08:39.678(Timestamp), null, 23433(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:08:39.678(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:08:39  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:08:40  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:08:41  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:08:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-29 19:08:42  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), K02000004(String), 2(String)
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:08:43  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:08:45  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:45  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:08:45  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:08:46  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:08:46  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:08:46  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:46  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 19:08:46  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 2013-08-23(String), 2013-08-30(String)
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3203810707(String), 2013-08-23(String), 2013-08-30(String)
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:08:47  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:09:09  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:09  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:09:09  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:09:10  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:09:10  DEBUG [1740617@qtp-21806911-6] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:09:10  DEBUG [7794555@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:09:12  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:09:13  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:09:40  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:09:40  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:09:40  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 1395(String)
2013-08-29 19:09:41  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:09:41  DEBUG [5790344@qtp-21806911-7] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer)
2013-08-29 19:10:11  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:10:11  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253215422(String), 2013-08-23(String), 2013-08-30(String)
2013-08-29 19:11:36  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.mail_no = ? AND o.send_time between ? and ? 
2013-08-29 19:11:36  DEBUG [5378543@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 1395(String), 3253220964(String), 2013-08-23(String), 2013-08-30(String)
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:13:02  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:13:03.043(Timestamp), null, 23433(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:13:03.043(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:13:03  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:13:04  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:13:05  DEBUG [13065528@qtp-30159926-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:13:05  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:13:07  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:13:09  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:09  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:13:09  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:13:10  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:14:01  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:14:01  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:14:01  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 3240346230(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 3240346230(String)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480293(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 6377480293(String)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480135(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 6377480135(String)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480261(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:14:59  DEBUG [21953712@qtp-30159926-7] (Slf4jImpl.java:28) - ==> Parameters: 6377480261(String)
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:16:10  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:16:11  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String)
2013-08-29 19:16:50  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001778(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001778(String)
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001821(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001821(String)
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001837(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:51  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001837(String)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001853(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001853(String)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001855(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001855(String)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001867(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001867(String)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001869(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:52  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001869(String)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001870(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001870(String)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001876(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001876(String)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 3146001879(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:16:53  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 3146001879(String)
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:16:54  DEBUG [22207597@qtp-12970890-2] (Slf4jImpl.java:28) - ==> Parameters: fe2aed5aec567905f51a92fe8c1e906d(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:18:00.813(Timestamp), null, 23433(Integer)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:18:00.813(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:00  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:18:01  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:18:02  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:18:03  DEBUG [13889917@qtp-32908873-2] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:18:03  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String)
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:18:05  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:18:06  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:18:07  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:07  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:18:07  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String)
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:18:17  DEBUG [22752902@qtp-32908873-3] (Slf4jImpl.java:28) - ==> Parameters: 9b17b744bf3ccb692e9e1bd8a9556d3f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:19:20  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:19:20.982(Timestamp), null, 23433(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:19:20.982(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:19:21  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:19:22  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:19:23  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String)
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:19:25  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:19:27  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:19:28  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:28  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:19:28  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String)
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 6376705492(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 6376705492(String)
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 6376705451(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:36  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 6376705451(String)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 6376705477(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 6376705477(String)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277005479(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277005479(String)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277005487(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277005487(String)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277011290(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:37  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277011290(String)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277011338(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277011338(String)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277011333(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277011333(String)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277011304(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277011304(String)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 3277011307(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:19:38  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 3277011307(String)
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:19:39  DEBUG [28563335@qtp-32158059-5] (Slf4jImpl.java:28) - ==> Parameters: 7a7f638427a24cb7d46179355d1c2c6c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:21:15  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:21:16.113(Timestamp), null, 23433(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:21:16.112(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:21:16  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:21:17  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:21:18  DEBUG [10297902@qtp-16932767-2] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:21:18  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String)
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:21:20  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:21:21  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:21:22  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:21:22  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:21:22  DEBUG [15519598@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 4288319fea9cfde1e4a390e4f49e65ac(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:22:37.61(Timestamp), null, 23433(Integer)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:22:37.61(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:37  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:22:38  DEBUG [29549291@qtp-15890762-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:22:40  DEBUG [13816871@qtp-15890762-8] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:22:40  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String)
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:22:41  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:22:42  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:22:43  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String)
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:23:09  DEBUG [13889917@qtp-15890762-6] (Slf4jImpl.java:28) - ==> Parameters: 8197008bac9aa7d23f1e2affb1c4aef1(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:24:01  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:24:01.535(Timestamp), null, 23433(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:24:01.535(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:24:02  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:24:03  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:24:04  DEBUG [271632@qtp-19543910-2] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:24:04  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:24:05  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:05  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:24:05  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String)
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:24:06  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:24:07  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:24:08  DEBUG [26630033@qtp-19543910-3] (Slf4jImpl.java:28) - ==> Parameters: 9a9dfdd4d739ccd1e280a37de810103b(String)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:25:51.848(Timestamp), null, 23433(Integer)
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:25:51  DEBUG [16843259@qtp-28432689-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:25:51.848(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:25:52  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:25:53  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:25:54  DEBUG [8999184@qtp-28432689-3] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:25:54  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:25:55  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:55  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:25:55  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String)
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:25:56  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:25:57  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:25:58  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:25:58  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:25:58  DEBUG [25108370@qtp-28432689-5] (Slf4jImpl.java:28) - ==> Parameters: 40adaa13c68fda63d073a5353d6afb9f(String)
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:27:04  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:27:05.025(Timestamp), null, 23433(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:27:05.025(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:27:05  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:27:06  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:27:07  DEBUG [9821722@qtp-15375609-2] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:27:07  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:27:08  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:08  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:27:08  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:27:09  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:27:10  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:27:11  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:11  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:27:11  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String)
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 3240346230(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 3240346230(String)
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480293(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:27:24  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 6377480293(String)
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 6377480261(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 6377480261(String)
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:27:25  DEBUG [6997508@qtp-15375609-3] (Slf4jImpl.java:28) - ==> Parameters: 032d02b130f5feb91e60e4ce25868c94(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:29:48.85(Timestamp), null, 23433(Integer)
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:29:48  DEBUG [32359557@qtp-21806911-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:29:48.85(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:29:49  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:29:50  DEBUG [337363@qtp-21806911-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:29:51  DEBUG [19030197@qtp-21806911-4] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:29:51  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String)
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:29:52  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:29:53  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:29:54  DEBUG [30165554@qtp-21806911-5] (Slf4jImpl.java:28) - ==> Parameters: K755120997(String)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@5b89(String), K02000004:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-29 19:32:50.811(Timestamp), null, 23433(Integer)
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-29 19:32:50  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 168(Integer), K02000004(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 020-39955915(String), 13527751219(String), 广东省(String), 广州市(String), 番禺区(String), 南村镇官堂村双桂路24号(String), null, null, null, tanglovehe@126.com(String), null, null, 1(String), null, 1(String), null, null, null, 200076(String), 唐小姐(String), null, 2013-08-29 19:32:50.811(Timestamp), 1395(String), 440000(String), ,NTkxNQ==,aDc5Ng==,Mzk5NQ==(String), null, null, null, null, 23433(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:32:51  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 23433(Integer)
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-29 19:32:52  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:32:53  DEBUG [32393902@qtp-9793387-2] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-29 19:32:53  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 2013-08-28(String), 2013-08-28(String)
2013-08-29 19:32:56  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:56  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:32:56  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String)
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:32:57  DEBUG [29344932@qtp-9793387-7] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:33:01  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:33:02  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:02  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:33:02  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String)
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:33:43  DEBUG [25957526@qtp-9793387-4] (Slf4jImpl.java:28) - ==> Parameters: 917a4e9ab917b20b83076613ff4b2a32(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:41  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String), 1(String), 1(String)
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ATTENTIONMAIL o WHERE o.customer_id IN ( ? ) AND o.send_time between ? and ? ORDER BY o.send_time DESC limit 0,50 
2013-08-29 19:34:42  DEBUG [11345974@qtp-21640007-2] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 2013-05-31(String), 2013-08-30(String)
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:34:43  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_dredgeservice where flag=1 and user_id=? and service_id in (select id from ec_core_payservice where flag=1 and name=?) 
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: 23433(Integer), 时效提醒(String)
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_warnvalue where seller_id=? 
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: K02000004(String)
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-29 19:34:44  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-29 19:34:45  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:34:45  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.TAOBAO_ENCODE_KEY = ? AND user_type = 1 
2013-08-29 19:34:45  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String)
2013-08-29 19:37:03  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), V061407669(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: V061407669(String)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), V066347091(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: V066347091(String)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), V066347090(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: V066347090(String)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), V066347106(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:37:06  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: V066347106(String)
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mail_no = ? AND t.deal_status = ? order by t.deal_time DESC limit ?, ? 
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), V066347302(String), 2(String), 0(Integer), 10(Integer)
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_ORDER o WHERE o.mailNo = ? 
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: V066347302(String)
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:37:07  DEBUG [29408535@qtp-21640007-3] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:38:08  DEBUG [860315@qtp-21640007-5] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:43:11  DEBUG [22465766@qtp-21640007-8] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:48:14  DEBUG [5019196@qtp-21640007-11] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:53:16  DEBUG [14495535@qtp-21640007-14] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 19:58:20  DEBUG [28952013@qtp-21640007-18] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:03:23  DEBUG [20720112@qtp-21640007-22] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:08:27  DEBUG [19346428@qtp-21640007-26] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:13:32  DEBUG [6437528@qtp-21640007-31] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:18:36  DEBUG [25729453@qtp-21640007-35] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:23:39  DEBUG [18075390@qtp-21640007-38] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:28:42  DEBUG [17692198@qtp-21640007-41] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:33:45  DEBUG [8867011@qtp-21640007-44] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:38:50  DEBUG [18707323@qtp-21640007-49] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:43:53  DEBUG [11106119@qtp-21640007-52] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:48:56  DEBUG [30331693@qtp-21640007-55] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:54:00  DEBUG [14676852@qtp-21640007-59] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 20:59:04  DEBUG [19937910@qtp-21640007-63] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:04:06  DEBUG [32776809@qtp-21640007-65] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:09:08  DEBUG [33242460@qtp-21640007-67] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:14:12  DEBUG [16260234@qtp-21640007-71] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:19:15  DEBUG [3272112@qtp-21640007-74] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:24:20  DEBUG [29651787@qtp-21640007-79] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:29:23  DEBUG [6962455@qtp-21640007-83] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:34:27  DEBUG [14841636@qtp-21640007-87] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:39:30  DEBUG [16892277@qtp-21640007-90] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:44:33  DEBUG [31405393@qtp-21640007-93] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:49:35  DEBUG [27674873@qtp-21640007-95] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:54:37  DEBUG [20793196@qtp-21640007-98] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 21:59:40  DEBUG [26707129@qtp-21640007-101] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:04:43  DEBUG [10157958@qtp-21640007-104] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:09:46  DEBUG [21666268@qtp-21640007-107] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:14:50  DEBUG [15303778@qtp-21640007-111] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:19:54  DEBUG [8420284@qtp-21640007-115] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:24:55  DEBUG [17217225@qtp-21640007-116] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:29:58  DEBUG [20855701@qtp-21640007-119] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:35:00  DEBUG [14752818@qtp-21640007-121] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:40:02  DEBUG [792659@qtp-21640007-123] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:45:06  DEBUG [5438146@qtp-21640007-127] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:50:10  DEBUG [21996527@qtp-21640007-131] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 22:55:15  DEBUG [9076515@qtp-21640007-136] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:00:19  DEBUG [30472904@qtp-21640007-140] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:05:22  DEBUG [13158830@qtp-21640007-143] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:10:25  DEBUG [17029135@qtp-21640007-146] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:15:28  DEBUG [8301476@qtp-21640007-149] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:20:29  DEBUG [24467104@qtp-21640007-151] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:25:32  DEBUG [12547989@qtp-21640007-154] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:30:36  DEBUG [10475447@qtp-21640007-158] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:35:39  DEBUG [26331540@qtp-21640007-161] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:40:44  DEBUG [12856922@qtp-21640007-166] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:45:47  DEBUG [8876692@qtp-21640007-169] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:50:52  DEBUG [15678903@qtp-21640007-174] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 23433(Integer)
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-29 23:55:55  DEBUG [27509973@qtp-21640007-177] (Slf4jImpl.java:28) - ==> Parameters: f9f9da625346115d89162976660f990c(String), 0(String), 2(String), 2013-08-20 00:00:00.0(Timestamp), 2013-08-30 00:00:00.0(Timestamp), 0(String)
