<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.ytoec.kernel.mapper.ZebraParternMapper" >
  <resultMap id="BaseResultMap" type="net.ytoec.kernel.dataobject.ZebraPartern" >
    <id column="partern_id" property="parternId" jdbcType="INTEGER" />
    <result column="customer_code" property="customerCode" jdbcType="VARCHAR" />
    <result column="partern_code" property="parternCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    partern_id, customer_code, partern_code, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from zebra_partern
    where partern_id = #{parternId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByCustomerCode" parameterType="java.lang.String" >
    delete from zebra_partern
    where customer_code = #{customer_code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="net.ytoec.kernel.dataobject.ZebraPartern" >
    insert into t_zebra_partern (customer_code, partern_code, update_time)
    values (#{customerCode,jdbcType=VARCHAR}, #{parternCode,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
    <selectKey resultType="java.lang.String" keyProperty="customerCode" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zebra_partern (partern_id, customer_code, partern_code, 
      create_time, update_time)
    values (#{parternId,jdbcType=BIGINT}, #{customerCode,jdbcType=VARCHAR}, #{parternCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.ytoec.kernel.dataobject.ZebraPartern" >
    insert into zebra_partern
    <trim prefix="(" suffix=")" suffixOverrides="," >
      customer_code,
      <if test="parternCode != null" >
        partern_code,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{customerCode,jdbcType=VARCHAR},
      <if test="parternCode != null" >
        #{parternCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.ytoec.kernel.dataobject.ZebraPartern" >
    update zebra_partern
    <set >
      <if test="customerCode != null" >
        customer_code = #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="parternCode != null" >
        partern_code = #{parternCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where partern_id = #{parternId,jdbcType=BIGINT}
  </update>
  
  <insert id="updateByCustomerCode" parameterType="net.ytoec.kernel.dataobject.ZebraPartern" >
    insert into zebra_partern(customer_code,partern_code,update_time) 
	values(#{customerCode},#{parternCode},#{updateTime}) 
	on duplicate key update customer_code=#{customerCode}
  </insert>
   
	<!-- 根据客户代码查询密钥 -->
	<select id="selectParternCodeByCustomerCode" parameterType="java.lang.String" resultType="java.lang.String">
		select partern_code from zebra_partern where customer_code=#{customerCode}
	</select>
 	
	<!-- 分页查询密钥,start getPageList getTotal互为一对使用-->
	<!--查询数据-->
	<select id="selectPageList" parameterType="Map" resultType="list" resultMap="BaseResultMap"> 
		select t2.* from ec_core_userthread t1, zebra_partern t2
  		where t1.user_code=t2.customer_code
		<if test='startIndex != null and pageSize != null'>
			limit #{startIndex}, #{pageSize}
		</if>		
	</select>
	<!--查询数量-->
	<select id="selectTotal" parameterType="Map" resultType="integer">
		select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2
  		where t1.user_code=t2.customer_code
	</select>
	<!-- 分页查询end -->
	 
</mapper>