<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ytoec.kernel.mapper.UnlikeFreightMapper">
	<resultMap type="net.ytoec.kernel.dataobject.UnlikeFreight"
		id="unlikeFreightResultMap">
		<id property="id" column="id" />
		<result property="mailNo" column="mailNo" />
		<result property="customerId" column="customer_id" />
		<result property="siteId" column="site_id" />
		<result property="siteCode" column="site_code" />
		<result property="userthreadId" column="userthread_id" />
		<result property="userCode" column="user_code" />
		<result property="userName" column="user_name" />
		<result property="address" column="address" />
		<result property="mobile" column="mobile" />
		<result property="reason" column="reason" />
		<result property="remark" column="remark" />
		<result property="price" column="price" />
		<result property="oidPrice" column="oid_price" />
		<result property="createUser" column="create_user" />
		<result property="createTime" column="create_time" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
		<result property="type" column="type" />
		<result property="status" column="status" />
		<result property="weight" column="weight" />
		<result property="goodsTime" column="goods_time" />
	</resultMap>

	<select id="getUnlikeFreightList" resultType="list"
		resultMap="unlikeFreightResultMap">
		select *
		from ec_core_unlike_freight t
		<where>
		<if test="onemailNo != null">
			AND mailNo =#{onemailNo}
			
		</if>
		<if test="type != null">
			AND type =#{type}
			
		</if>
		<if test="mailNo != null">
			AND mailNo IN
			<foreach collection="mailNo" item="mailNo" open="(" separator="," close=")" >
				#{mailNo}
			</foreach>
		</if>
			<if test="userCode != null and userCode !='' " >
				AND user_code = #{userCode}
			</if>
			<if test='customerId != null'>
				AND customer_id IN
				<foreach collection="customerId" item="customerId" open="(" separator="," close=")" >
					#{customerId}
				</foreach>
			</if>				
			<if test='userthreadId != null'>
				AND userthread_id = #{userthreadId}
			</if>
			<if test="startTime != null and endTime != null">
			 <![CDATA[
			 	AND goods_time >= #{startTime} AND goods_time <= #{endTime}
			 ]]>
			</if>
		</where>
		ORDER BY goods_time DESC
		<if test='startIndex != null and pageNum != null'>
			limit #{startIndex}, #{pageNum}
		</if>
	</select>

	<select id="get" parameterType="unlikeFreight"
		resultType="net.ytoec.kernel.dataobject.UnlikeFreight" resultMap="unlikeFreightResultMap">
		<![CDATA[
			select *
			from ec_core_unlike_freight t where t.id = #{id}
        ]]>
	</select>
	
	<select id="getUnlikeFreightByMailNo" parameterType="unlikeFreight"
		resultType="net.ytoec.kernel.dataobject.UnlikeFreight" resultMap="unlikeFreightResultMap">
		<![CDATA[
			select *
			from ec_core_unlike_freight t where t.mailNo = #{mailNo}
        ]]>
	</select>
	
	<insert id="add" parameterType="unlikeFreight" keyProperty="id"
		useGeneratedKeys="true">
		insert into ec_core_unlike_freight(id,mailNo,
		customer_id,
		site_id,site_code,userthread_id,user_code,user_name,address,mobile,reason,remark,price,oid_price,create_user,update_user,update_time,type,status,weight,goods_time)
		values(#{id}, #{mailNo}, #{customerId}, #{siteId}, #{siteCode},
		#{userthreadId}, #{userCode}, #{userName}, #{address}, #{mobile},
		#{reason}, #{remark}, #{price}, #{oidPrice}, #{createUser},
		#{updateUser}, now(),#{type},#{status},#{weight},#{goodsTime})
	</insert>


	<update id="edit" parameterType="unlikeFreight">
		update ec_core_unlike_freight t
		set
		mailNo = #{mailNo},
		customer_id = #{customerId},
		site_id = #{siteId},
		site_code = #{siteCode},
		userthread_id = #{userthreadId},
		user_code = #{userCode},
		user_name = #{userName},
		address = #{address},
		mobile = #{mobile},
		reason = #{reason},
		remark = #{remark},
		price = #{price},
		oid_price = #{oidPrice},
		create_user = #{createUser},
		update_user = #{updateUser},
		update_time = now(),
		type = #{type},
		status = #{status},
		weight = #{weight},
		goods_time = #{goodsTime}
		where t.id =
		#{id}
	</update>
	<delete id="remove" parameterType="unlikeFreight">
		delete from
		ec_core_unlike_freight where id = #{id}
	</delete>
</mapper>
