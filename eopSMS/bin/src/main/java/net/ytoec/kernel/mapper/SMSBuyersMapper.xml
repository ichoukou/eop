<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ytoec.kernel.mapper.SMSBuyersMapper">
	<resultMap type="net.ytoec.kernel.dataobject.SMSBuyers" id="smsBuyersResultMap">
		<id property="id" column="id" />
		<result property="buyerAccount" column="buyer_account" />
		<result property="receiverName" column="receiver_name" />
		<result property="receiverMobile" column="receiver_mobile" />
		<result property="receiverPhone" column="receiver_phone" />
		<result property="receiverPostcode" column="receiver_postcode" />
		<result property="receiverProvince" column="receiver_province" />
		<result property="receiverCity" column="receiver_city" />
		<result property="receiverDistrict" column="receiver_district" />
		<result property="receiverAddress" column="receiver_address" />
		<result property="sourceStatus" column="source_status" />
		<result property="marketingSendCount" column="marketing_send_count" />
		<result property="theLastMarketTime" column="the_last_market_time" />
		<result property="totalTradeCount" column="total_trade_count" />
		<result property="totalTradeAmount" column="total_trade_amount" />
		<result property="theLastTradeTime" column="the_last_trade_time" />
		<result property="userId" column="userId" />
		<result property="updateTime" column="update_time" />
		<result property="updateUserId" column="update_userId" />
		<result property="createTime" column="create_time" />
		<result property="createUserId" column="create_userId" />
		<result property="remark" column="remark" />
		<result property="shopName" column="shop_name"/>
	</resultMap>
	   
	<insert id="addSMSBuyers" parameterType="smsBuyers" keyProperty="id"
		useGeneratedKeys="true">
		insert into ec_core_sms_buyers(id,buyer_account,receiver_name,receiver_mobile,receiver_phone,receiver_postcode,receiver_province,
					receiver_city,receiver_district,receiver_address,source_status,marketing_send_count,the_last_market_time,
					total_trade_count,total_trade_amount,the_last_trade_time,userId,update_time,update_userId,create_time,create_userId,remark) 
		values(#{id},#{buyerAccount},#{receiverName},#{receiverMobile},#{receiverPhone},#{receiverPostcode},#{receiverProvince},
					#{receiverCity},#{receiverDistrict},#{receiverAddress},#{sourceStatus},#{marketingSendCount},#{theLastMarketTime},
					#{totalTradeCount},#{totalTradeAmount},#{theLastTradeTime},#{userId},#{updateTime},#{updateUserId},now(),#{createUserId},#{remark});	
	</insert>
	
	<insert id="addSMSBuyersList" parameterType="java.util.List">
		insert into ec_core_sms_buyers(id,buyer_account,receiver_name,receiver_mobile,receiver_phone,receiver_postcode,receiver_province,
					receiver_city,receiver_district,receiver_address,source_status,marketing_send_count,the_last_market_time,
					total_trade_count,total_trade_amount,the_last_trade_time,userId,update_time,update_userId,create_time,create_userId,remark) 
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{id},#{buyerAccount},#{receiverName},#{receiverMobile},#{receiverPhone},#{receiverPostcode},#{receiverProvince},
						#{receiverCity},#{receiverDistrict},#{receiverAddress},#{sourceStatus},#{marketingSendCount},#{theLastMarketTime},
						#{totalTradeCount},#{totalTradeAmount},#{theLastTradeTime},#{userId},#{updateTime},#{updateUserId},now(),#{createUserId},#{remark})
		</foreach>
	</insert>
	
	<delete id="delSMSBuyersById" parameterType="Integer">
		delete from ec_core_sms_buyers where id=#{id}
	</delete>
	
	<update id="editSMSBuyers" parameterType="smsBuyers">
		update ec_core_sms_buyers set 
			buyer_account=#{buyerAccount},receiver_name=#{receiverName},receiver_mobile=#{receiverMobile},receiver_phone=#{receiverPhone},receiver_postcode=#{receiverPostcode},receiver_province=#{receiverProvince},
					receiver_city=#{receiverCity},receiver_district=#{receiverDistrict},receiver_address=#{receiverAddress},source_status=#{sourceStatus},marketing_send_count=#{marketingSendCount},the_last_market_time=#{theLastMarketTime},
					total_trade_count=#{totalTradeCount},total_trade_amount=#{totalTradeAmount},the_last_trade_time=#{theLastTradeTime},userId=#{userId},update_time=now(),update_userId=#{updateUserId},remark=#{remark}   
		where id=#{id}
	</update>
	
	<select id="getSMSBuyersById" parameterType="Integer" resultType="smsBuyers" 	resultMap="smsBuyersResultMap">
		select * from ec_core_sms_buyers where id=#{id}
	</select>
	 
	 <!-- 根据登录帐号和当前卖家的主帐号id获取会员信息  -->
	 <select id="getSMSBuyersByBuyerAccount" parameterType="map" resultType="smsBuyers"	resultMap="smsBuyersResultMap">
		select * from ec_core_sms_buyers 
		<where>
			<if test="buyerAccount != null and buyerAccount !=''">
				AND buyer_account=#{buyerAccount}
			</if>	
			<if test="userId != null and userId !=''">
				AND userId=#{userId}
			</if>	
		</where>
	</select>
	 
	 <!-- 批量删除会员信息  -->
	 <delete id="delBatchSMSBuyers" parameterType="map">
		<if test="idLists != null and idLists.size() > 0">
		DELETE FROM ec_core_sms_buyers WHERE id IN
			<foreach collection="idLists" item="idList" open="(" separator="," close=")" >
				#{idList} 
			</foreach>
		</if>
	</delete>
	
	<!-- 从淘宝获取订单下来时需要更新会员的信息 1、累加交易额 2、交易量 + 1 3、更新上一次的交易时间  -->
	<update id="updateInfoByTaobao" parameterType="map">
		update ec_core_sms_buyers set 
			total_trade_count = total_trade_count + 1, total_trade_amount = total_trade_amount + #{tradeAmount}, the_last_trade_time = #{theLastTradeTime}, update_time=now()
		where id=#{userId}
	</update>
	
	<!--  根据查询条件获取会员信息  -->
	<select id="getSMSBuyersByPamams" parameterType="Map" resultType="list" resultMap="smsBuyersResultMap">
    	select * from ec_core_sms_buyers left join ec_core_user on ec_core_sms_buyers.userId=ec_core_user.id
    	<where>
			<if test="userIds != null and userIds !=''">
				AND userId in
				<foreach collection="userIds" item="userId" open="(" separator="," close=")" >
					#{userId} 
				</foreach>
			</if>
			
			<!-- 上次活动时间 -->
			<if test="theLastMarketTime != null and theLastMarketTime !=''">
				AND the_last_market_time &gt; date_add(now(), interval -#{theLastMarketTime} day) 
				and the_last_market_time &lt; now() 
			</if>
			
			<!-- 上次交易时间 -->
			<if test="theLastTradeTime != null and theLastTradeTime !=''">
				AND the_last_trade_time &gt; date_add(now(), interval -#{theLastTradeTime} day) 
				and the_last_trade_time &lt; now() 
			</if>
			
			<!-- 省市区查询 -->
			<if test="receiverProvince != null and receiverProvince !=''">
				AND receiver_province=#{receiverProvince} 
			</if>
			<if test="receiverCity != null and receiverCity !=''">
				AND receiver_city=#{receiverCity} 
			</if>
			<if test="receiverDistrict != null and receiverDistrict !=''">
				AND receiver_district=#{receiverDistrict} 
			</if>
			
			<!-- 电话，淘宝号，联系人 -->
			<!--  淘宝号，联系人 使用或者查询
				<if test="buyerAccount != null and buyerAccount !=''">
					AND buyer_account=#{buyerAccount} 
				</if>
			-->
			<if test="receiverName != null and receiverName !=''">
				AND (receiver_name=#{receiverName} OR buyer_account=#{receiverName}) 
			</if>
			<if test="buyerAccount != null and buyerAccount !=''">
				AND (receiver_name=#{buyerAccount} OR buyer_account=#{buyerAccount}) 
			</if>
			<if test="receiverMobile != null and receiverMobile !=''">
				AND receiver_mobile=#{receiverMobile} 
			</if>
			
			<!-- 会员等级：按照交易额和交易量区间取值 -->
			<choose>
				<when test="tradeCountMin != null and tradeCountMin >0 and tradeAmountMin != null and tradeAmountMin >0">
					AND (total_trade_count >= #{tradeCountMin} OR total_trade_amount >= #{tradeAmountMin})
				</when>
				<otherwise>
					<if test="tradeCountMin != null and tradeCountMin >0">
						AND total_trade_count >= #{tradeCountMin} 
					</if>
					<if test="tradeAmountMin != null and tradeAmountMin >0">
						AND total_trade_amount >= #{tradeAmountMin} 
					</if>
				</otherwise>
			</choose>
			<if test="tradeCountMax != null and tradeCountMax >0">
			 	<![CDATA[
					AND total_trade_count < #{tradeCountMax} 
				 ]]>
			</if>
			<if test="tradeAmountMax != null and tradeAmountMax >0">
				<![CDATA[
					AND total_trade_amount < #{tradeAmountMax} 
				 ]]>
			</if>
			<if test="found == -1">  <!-- 表示不需要查询结果 -->
				AND 1=2
			</if>
			
			<!-- 按照交易额和交易量区间取值 -->
			<if test="tradeCountMin2 != null and tradeCountMin2 >0">
				AND total_trade_count >= #{tradeCountMin2} 
			</if>
			<if test="tradeAmountMin2 != null and tradeAmountMin2 >0">
				AND total_trade_amount >= #{tradeAmountMin2} 
			</if>
			<if test="tradeCountMax2 != null and tradeCountMax2 >0">
			 	<![CDATA[
					AND total_trade_count <= #{tradeCountMax2} 
				 ]]>
			</if>
			<if test="tradeAmountMax2 != null and tradeAmountMax2 >0">
				<![CDATA[
					AND total_trade_amount <= #{tradeAmountMax2} 
				 ]]>
			</if>
			
			<if test="shopName != null and shopName !=''">
				<![CDATA[
					AND ec_core_user.shop_name = #{shopName} 
				 ]]>
			</if>
		</where>
		<!-- 按照交易额和交易量排序  -->
		<if test='orderByCol == "tradeCount"'>
			ORDER BY total_trade_count DESC
		</if>
		<if test='orderByCol == "tradeAmount"'>
			ORDER BY total_trade_amount DESC
		</if>
		<if test='startIndex != null and pageNum != null'>
			LIMIT #{startIndex}, #{pageNum}
		</if>
    </select>
    
    <!--  根据查询条件获取会员数量  -->
	<select id="getSMSBuyersCountByPamams" parameterType="Map" resultType="integer">
    	select count(*) from ec_core_sms_buyers
    	<where>
			<if test="userIds != null and userIds !=''">
				AND userId in
				<foreach collection="userIds" item="userId" open="(" separator="," close=")" >
					#{userId} 
				</foreach>
			</if>
			
			<!-- 上次活动时间 -->
			<if test="theLastMarketTime != null and theLastMarketTime !=''">
				AND the_last_market_time &gt; date_add(now(), interval -#{theLastMarketTime} day) 
				and the_last_market_time &lt; now() 
			</if>
			
			<!-- 上次交易时间 -->
			<if test="theLastTradeTime != null and theLastTradeTime !=''">
				AND the_last_trade_time &gt; date_add(now(), interval -#{theLastTradeTime} day) 
				and the_last_trade_time &lt; now() 
			</if>
			
			<!-- 省市区查询 -->
			<if test="receiverProvince != null and receiverProvince !=''">
				AND receiver_province=#{receiverProvince} 
			</if>
			<if test="receiverCity != null and receiverCity !=''">
				AND receiver_city=#{receiverCity} 
			</if>
			<if test="receiverDistrict != null and receiverDistrict !=''">
				AND receiver_district=#{receiverDistrict} 
			</if>
			
			<!-- 电话，淘宝号，联系人 -->
			<!--  淘宝号，联系人 使用或者查询
				<if test="buyerAccount != null and buyerAccount !=''">
					AND buyer_account=#{buyerAccount} 
				</if>
			-->
			<if test="receiverName != null and receiverName !=''">
				AND (receiver_name=#{receiverName} OR buyer_account=#{receiverName}) 
			</if>
			<if test="buyerAccount != null and buyerAccount !=''">
				AND (receiver_name=#{buyerAccount} OR buyer_account=#{buyerAccount}) 
			</if>
			<if test="receiverMobile != null and receiverMobile !=''">
				AND receiver_mobile=#{receiverMobile} 
			</if>
			
			<!-- 会员等级：按照交易额和交易量区间取值 -->
			<choose>
				<when test="tradeCountMin != null and tradeCountMin >0 and tradeAmountMin != null and tradeAmountMin >0">
					AND (total_trade_count >= #{tradeCountMin} OR total_trade_amount >= #{tradeAmountMin})
				</when>
				<otherwise>
					<if test="tradeCountMin != null and tradeCountMin >0">
						AND total_trade_count >= #{tradeCountMin} 
					</if>
					<if test="tradeAmountMin != null and tradeAmountMin >0">
						AND total_trade_amount >= #{tradeAmountMin} 
					</if>
				</otherwise>
			</choose>
			<if test="tradeCountMax != null and tradeCountMax >0">
			 	<![CDATA[
					AND total_trade_count < #{tradeCountMax} 
				 ]]>
			</if>
			<if test="tradeAmountMax != null and tradeAmountMax >0">
				<![CDATA[
					AND total_trade_amount < #{tradeAmountMax} 
				 ]]>
			</if>
			<if test="found == -1">  <!-- 表示不需要查询结果 -->
				AND 1=2
			</if>
			
			<!-- 按照交易额和交易量区间取值 -->
			<if test="tradeCountMin2 != null and tradeCountMin2 >0">
				AND total_trade_count >= #{tradeCountMin2} 
			</if>
			<if test="tradeAmountMin2 != null and tradeAmountMin2 >0">
				AND total_trade_amount >= #{tradeAmountMin2} 
			</if>
			<if test="tradeCountMax2 != null and tradeCountMax2 >0">
			 	<![CDATA[
					AND total_trade_count <= #{tradeCountMax2} 
				 ]]>
			</if>
			<if test="tradeAmountMax2 != null and tradeAmountMax2 >0">
				<![CDATA[
					AND total_trade_amount <= #{tradeAmountMax2} 
				 ]]>
			</if>
		</where>
		
    </select>
    
     <!-- 统计查询帐号等级数量  -->
	 <select id="getCountByUserGrade" parameterType="Map" resultType="integer">
		select count(*) from ec_core_sms_buyers 
		<where>
			<if test="userIds != null and userIds !='' and userIds.size() > 0">
				AND userId IN
				<foreach collection="userIds" item="userId" open="(" separator="," close=")" >
					#{userId} 
				</foreach>
			</if>
			
			<!-- 会员等级： 按照交易额和交易量区间取值 -->
			<choose>
				<when test="tradeCountMin != null and tradeCountMin >0 and tradeAmountMin != null and tradeAmountMin >0">
					AND (total_trade_count >= #{tradeCountMin} OR total_trade_amount >= #{tradeAmountMin})
				</when>
				<otherwise>
					<if test="tradeCountMin != null and tradeCountMin >0">
						AND total_trade_count >= #{tradeCountMin} 
					</if>
					<if test="tradeAmountMin != null and tradeAmountMin >0">
						AND total_trade_amount >= #{tradeAmountMin} 
					</if>
				</otherwise>
			</choose>
			<if test="tradeCountMax != null and tradeCountMax >0">
			 	<![CDATA[
					AND total_trade_count < #{tradeCountMax} 
				 ]]>
			</if>
			<if test="tradeAmountMax != null and tradeAmountMax >0">
				<![CDATA[
					AND total_trade_amount < #{tradeAmountMax} 
				 ]]>
			</if>
			<if test="found == -1">  <!-- 表示不需要查询结果 -->
				AND 1=2
			</if>
		</where>
	</select>
	<!-- 旺旺唯一性验证 -->
	<select id="checkWW" parameterType="String" resultType="smsBuyers">
		select * from ec_core_sms_buyers where buyer_account=#{buyerAccount}
	</select>
</mapper>
