2013-08-06 09:27:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:01  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 09:27:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 09:27:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 09:27:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 09:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 09:27:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 09:27:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 09:27:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 09:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 09:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 15:02:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:02:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:02:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:02:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:02:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:02:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-06 15:04:18.938(Timestamp), null, 31886(Integer)
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-06 15:04:18  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-06 15:04:18.937(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-08-06 15:04:19  DEBUG [627822@qtp-19543910-4] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-08-06 15:04:21  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:21  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:04:21  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:04:27  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:27  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:04:27  DEBUG [8228607@qtp-19543910-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:04:30  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:06:44  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:44  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:06:44  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:06:45  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K54928747(String), 8FuVMdX6QSbg84oF87PyQw==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K54928747(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 32043K10000281(String), K54928747(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:06:46  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:07:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:07:57  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:07:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:07:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:07:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:07:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:07:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:07:59  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:07:59  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:07:59  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:08:00  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:08:12  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:08:19  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:08:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K31760591(String), 5PLem8PJfh/M4BSuEfh+0Q==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K31760591(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 32044K10000281(String), K31760591(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:08:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 15:09:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:09:20  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:09:23  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:24  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:24  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:09:24  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K27015792(String), 6JUfPR9XOJTHmfNhX+CWKA==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K27015792(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 32045K10000281(String), K27015792(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:09:31  DEBUG [11907458@qtp-19543910-5] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:10:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:10:22  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:10:23  DEBUG [3096544@qtp-3426887-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:10:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K33410813(String), xNlkDTpMaail+ehouts0lA==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K33410813(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 32046K10000281(String), K33410813(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:10:31  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:11:22  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K19448744(String), 0ZcP4weWrV8KRqJDnc/g6w==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K19448744(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 32047K10000281(String), K19448744(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:11:23  DEBUG [21042683@qtp-3426887-3] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:12:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:36  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K72963516(String), eh5WF4SD5SaSyetpwYvYLA==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K72963516(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 32048K10000281(String), K72963516(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:12:37  DEBUG [32396853@qtp-20223589-3] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 15:13:21  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:21  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:13:21  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:13:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:13:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:28  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:13:29  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:29  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:13:29  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:13:33  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K41503993(String), CBhJvIfNTZCSMka3nqy7cg==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K41503993(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 32049K10000281(String), K41503993(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:13:34  DEBUG [32243074@qtp-312755-2] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 15:14:47  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:50  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-06 15:14:51  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:51  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:14:51  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-06 15:14:54  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K27446633(String), nUOLWZpJxCrMO7SGVBI6OA==(String), 1(String), TBA(String), K10000281(String), 郝岗(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K27446633(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 32050K10000281(String), K27446633(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: K10000281(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 100003(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 15:14:55  DEBUG [10747063@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 16:54:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 16:54:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-06 16:54:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:54:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-06 16:54:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:54:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 16:55:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:55:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:55:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-06 16:56:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:56:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:56:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:57:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:57:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:58:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:58:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 16:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 16:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-06 17:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-06 17:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String), 2013-07-07(String), 2013-08-06(String)
2013-08-06 17:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-06 17:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-06 17:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
