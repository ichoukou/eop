2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-02 16:16:26.364(Timestamp), null, 31886(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-07-02 16:16:26.364(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:26  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:16:27  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-07-02 16:16:28  DEBUG [12335121@qtp-13732480-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-07-02 16:16:29  DEBUG [23057571@qtp-13732480-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:29  DEBUG [23057571@qtp-13732480-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:16:29  DEBUG [23057571@qtp-13732480-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:16:32  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:16:32  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:16:32  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:17:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 16:18:51  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:18:52  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:18:52  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:18:52  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:19:03  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-07-02 16:19:35  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 16:19:37  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:38  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:38  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 16:19:38  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:19:38  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:19:38  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:19:38  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:20:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:20:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:20:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:20:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:20:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 16:20:12  DEBUG [11593803@qtp-13732480-6] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:20:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K28474081(String), RDp8s1hYUxxgfZDr2yl9rQ==(String), 1(String), TBA(String), K10000903(String), 中煤基业(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K28474081(String)
2013-07-02 16:20:13  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 31999K10000903(String), K28474081(String)
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-07-02 16:20:14  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-07-02 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:22:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:22:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:22:12  DEBUG [20362896@qtp-13732480-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:23:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:23:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:56:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:56:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:56:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:56:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:01  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:57:02  DEBUG [17357515@qtp-13732480-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:59:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:59:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 16:59:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:59:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:59:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 16:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-07-02 16:59:21  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-07-02 16:59:22  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:22  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-07-02 16:59:22  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-02 16:59:22.012(Timestamp), null, 31886(Integer)
2013-07-02 16:59:23  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:23  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-07-02 16:59:23  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-07-02 16:59:22.012(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:24  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-07-02 16:59:25  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-07-02 16:59:27  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:27  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:59:27  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 16:59:29  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 16:59:29  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 16:59:29  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:00:06  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:00:06  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 17:00:06  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 17:00:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:02:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:02:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:05:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:05:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:05:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 17:05:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:10:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:10:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 17:10:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:11:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:11:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:15:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:15:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 17:15:07  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==>  Executing: select parternId from ec_core_channel_info where user_code = ? 
2013-07-02 17:16:28  DEBUG [30872606@qtp-26867541-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:28  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:28  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 17:16:28  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select user_name from ec_core_userthread where user_code = ? 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select user_code from ec_core_userthread where user_code = ? 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select site_code from ec_core_userthread where user_code = ? 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_user(user_name,user_password,user_type,user_state,user_code,user_name_text) values(?,?,?,?,?,?) 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K1822077(String), iGTEXm5YHCsmU/J4x0TDMQ==(String), 1(String), TBA(String), K10000903(String), 中煤基业(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_user where user_name=? 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K1822077(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_user set taobao_encode_key=? where user_name=? 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: 32005K10000903(String), K1822077(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_user where user_code=? and user_type='1' 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==>  Executing: select mail from ec_core_user where user_name=? and user_type='2' 
2013-07-02 17:16:30  DEBUG [32465863@qtp-26867541-8] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:17:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:17:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:32:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:32:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:32:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:35:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:35:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:38:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:38:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:38:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:38:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:38:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:41:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:41:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:41:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:42:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:42:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:42:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:42:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:42:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:44:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:44:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:44:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:45:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:45:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:45:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:45:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:45:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:47:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:47:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:47:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:47:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:47:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:47:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:48:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:49:44  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:44  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:49:44  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:49:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:50:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:50:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:51:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:51:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:51:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:53:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:53:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:53:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:53:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:56:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:56:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:56:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:57:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:59:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 17:59:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:02:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:05:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:05:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:08:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:08:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 18:11:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:26:37  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-02 19:26:38.212(Timestamp), null, 31886(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-07-02 19:26:38.211(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-07-02 19:26:38  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-07-02 19:26:39  DEBUG [30941721@qtp-29767569-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-07-02 19:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:29:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:32:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:32:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:33:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:35:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22000014(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:35:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K57150551(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(*) FROM zebra_surfacebill where current_user_no = ? and is_use = 0 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set warn_state=? where customer_code=? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_phone_state=? where customer_code=? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set send_mail_state=? where customer_code=? 
2013-07-02 19:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), K22002904(String)
2013-07-02 19:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT MAX(version_no) FROM zebra_surfacebill where current_user_no = ? 
2013-07-02 19:38:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-07-02 19:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-07-02 19:39:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(t2.partern_id) from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code 
2013-07-02 19:39:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-07-02 19:39:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select t2.* from ec_core_userthread t1, zebra_partern t2 where t1.user_code=t2.customer_code limit ?, ? 
2013-07-02 19:39:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 1000(Integer)
