2013-08-05 09:59:09  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:09  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:09  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 09:59:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 09:59:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 09:59:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 09:59:10  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 09:59:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 09:59:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 09:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 09:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 10:00:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 10:00:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 10:00:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 10:00:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 10:00:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:00:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:00:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:01:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:01:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:02:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:02:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:03:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:03:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:04:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:04:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:05:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:05:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:06:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:06:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:07:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-05 10:07:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:07:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:07:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:07:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:08:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:08:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:09:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:09:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:10:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:10:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:11:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:11:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:14:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:14:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:45  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:29:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:29:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 10:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 10:30:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 10:30:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 10:30:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 10:30:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 10:30:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 10:30:29  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 10:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:30:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-05 10:30:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:30:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:30:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 10:31:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 10:31:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:34:16  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:34:42  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 1(String), 1(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@147(String), 220029:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 10:34:43.163(Timestamp), null, 327(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: null, 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 022-25878792(String), 13920416887(String), 天津(String), 天津市(String), 滨海新区(String), 新河幸福楼5-6栋之间(String), M(String), null, null, 303914052@qq.com(String), 1(String), null, 2(String), null, 1(String), null, null, null, 220029(String), 天津市塘沽区分公司(String), 220029(String), 2013-08-05 10:34:43.163(Timestamp), 327(String), 120000(String), ,ODcx,bmk2,MTk4(String), null, null, null, null, 327(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:34:43  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 220029(String)
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-05 10:34:44  DEBUG [22184765@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:34:45  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:34:46  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:46  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-05 10:34:46  DEBUG [8025002@qtp-7375615-6] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 220029(String), 3(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-26(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-27(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-28(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-29(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-30(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-31(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-01(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-02(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-03(String)
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:34:46  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-04(String)
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:34:47  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:34:48  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:34:49  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:49  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:34:49  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:34:52  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String), 0(Integer)
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:34:59  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:35:00  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:35:11  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:35:11  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:35:11  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:36:51  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:36:51  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, customer_warn_history_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=?, init_again_state=? where customer_code=? 
2013-08-05 10:36:51  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 900(Integer), 80(Integer), 0(Integer), 13134567345(String), (String), zhi@1234.com(String), true(Boolean), true(Boolean), 2013-08-05 10:35:11.0(Timestamp), true(Boolean), K22000025(String)
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:37:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:40:08  DEBUG [948255@qtp-7375615-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:41:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:41:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:41:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:41:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:41:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:41:52  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:41:57  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:41:57  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:41:57  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:41:57  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:41:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:41:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:42:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:42:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:42:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:42:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 2(String)
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT DISTINCT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE site_id = ? AND account_type = '2' 
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_POSTTEMP WHERE create_user = ? 
2013-08-05 10:42:37  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:42:38  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:38  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 10:42:38  DEBUG [9862796@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 1(String), 1(String)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:39  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:42:40  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:42:41  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String), 0(Integer)
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:42:43  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:42:44  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:42:50  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:42:50  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:42:50  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:43:04  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:04  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, customer_warn_history_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 10:43:04  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 900(Integer), 800(Integer), 0(Integer), 13134567345(String), (String), zhi@1234.com(String), true(Boolean), true(Boolean), 2013-08-05 10:42:51.0(Timestamp), K22000025(String)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String), 0(Integer)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: K22000025(String)
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:43:09  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:43:10  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:43:10  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:43:10  DEBUG [3538808@qtp-572135-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:50:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:50:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:50:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:50:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:50:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:50:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 2(String)
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT DISTINCT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE site_id = ? AND account_type = '2' 
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_POSTTEMP WHERE create_user = ? 
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 10:51:02  DEBUG [26704350@qtp-5167690-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 1(String), 1(String)
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:51:03  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:04  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:51:05  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:51:06  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:06  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:51:06  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:51:07  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:51:08  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000023(String), 0(Integer)
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000023(String)
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:51:10  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000023(String)
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000023(String)
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:51:11  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String), 0(Integer)
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:13  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:51:14  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: insert into zebra_forewarn(branck_id,customer_code,branck_warn_value,customer_warn_value,phone, remark_phone,email,phone_warn,email_warn,send_phone_state,send_mail_state,update_time,init_state, customer_warn_history_value) values(?,?,?,?,?, ?,?,?,?,0,0,?,1,?) 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), K22000021(String), 7000(Integer), 5000(Integer), 13524591387(String), (String), zhidongm@163.com(String), true(Boolean), true(Boolean), 2013-08-05 10:51:35.0(Timestamp), 5000(Integer)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String), 0(Integer)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:35  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:51:36  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:51:50  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:51:50  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:51:50  DEBUG [8310083@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 10:53:51  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 1(String), 1(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@147(String), 220029:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 10:53:59.491(Timestamp), null, 327(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: null, 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 022-25878792(String), 13920416887(String), 天津(String), 天津市(String), 滨海新区(String), 新河幸福楼5-6栋之间(String), M(String), null, null, 303914052@qq.com(String), 1(String), null, 2(String), null, 1(String), null, null, null, 220029(String), 天津市塘沽区分公司(String), 220029(String), 2013-08-05 10:53:59.491(Timestamp), 327(String), 120000(String), ,ODcx,bmk2,MTk4(String), null, null, null, null, 327(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:53:59  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 220029(String)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-05 10:54:00  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:01  DEBUG [21402892@qtp-6934496-2] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:01  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:01  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-05 10:54:01  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 220029(String), 3(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-26(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-27(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-28(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-29(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-30(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-31(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-01(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-02(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-03(String)
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 10:54:01  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-04(String)
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:54:02  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:03  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000019(String), 0(Integer)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000019(String)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000019(String)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000019(String)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:06  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:09  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:09  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:54:09  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String), 0(Integer)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:10  DEBUG [6282021@qtp-6934496-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 70000(Integer), 5000(Integer), 13524591387(String), (String), zhidongm@163.com(String), true(Boolean), true(Boolean), 2013-08-05 10:54:20.0(Timestamp), K22000021(String)
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:54:20  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String), 0(Integer)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:21  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 10:54:29  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:29  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:29  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 7000(Integer), 5000(Integer), 13524591387(String), (String), zhidongm@163.com(String), true(Boolean), true(Boolean), 2013-08-05 10:54:30.0(Timestamp), K22000021(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String), 0(Integer)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: K22000021(String)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 10:54:30  DEBUG [31864173@qtp-6934496-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:11:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:11:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 11:11:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 11:11:05  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:11:05  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 11:11:05  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:11:39  DEBUG [27972052@qtp-25417229-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:13:54  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:13:54  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-05 11:13:54  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: LP070623008857703(String)
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070623008857703(String), 2007082300225725(String), 31883K22000014(String), 1225694979(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-05 11:13:55.001(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t2(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 14380(Integer), 0(Integer), null, null, null
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 14380(Integer), 0(Integer), null, null, null
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 14380(Integer)
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 14380(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 14380(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 14380(Integer), null, YTO(String), LP070623008857703(String), 2007082300225725(String), 31883K22000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t2(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_SEND_TASK (request_url,order_id,last_send_time,client_id,request_params,remark,task_flag_id,task_flag,tx_logistic_id) values (?, ?,now(),?,?,?,?,?,?); 
2013-08-05 11:13:55  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer), TAOBAO(String), logistics_interface=%3CRequestOrder%3E%0D%0A+%3CecCompanyId%3ETaobao%3C%2FecCompanyId%3E%0D%0A+%3ClogisticProviderID%3EYTO%3C%2FlogisticProviderID%3E%0D%0A+%3CcustomerId%3E31883K22000014%3C%2FcustomerId%3E%0D%0A+%3CtxLogisticID%3ELP070623008857703%3C%2FtxLogisticID%3E+%0D%0A+%3CtradeNo%3E2007082300225725%3C%2FtradeNo%3E%0D%0A+%3CmailNo%3E1225694979%3C%2FmailNo%3E++++%0D%0A+%3CtotalServiceFee%3E3200%3C%2FtotalServiceFee%3E%0D%0A+%3CcodSplitFee%3E2000%3C%2FcodSplitFee%3E%0D%0A+%3CbuyServiceFee%3E1000%3C%2FbuyServiceFee%3E%0D%0A+%3CorderType%3E1%3C%2ForderType%3E%0D%0A+%3CserviceType%3E1%3C%2FserviceType%3E+%0D%0A+%3Csender%3E%0D%0A++%3Cname%3E%E6%B5%8B%E8%AF%95t2%3C%2Fname%3E%0D%0A++%3CpostCode%3E476000%3C%2FpostCode%3E%0D%0A++%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A++%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A++%3Cprov%3E%E6%B5%99%E6%B1%9F%3C%2Fprov%3E%0D%0A++%3Ccity%3E%E6%9D%AD%E5%B7%9E%3C%2Fcity%3E%0D%0A++%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A+%3C%2Fsender%3E%0D%0A+%3Creceiver%3E%0D%0A++%3Cname%3E%E6%9D%8E%E5%9B%9B%3C%2Fname%3E%0D%0A++%3CpostCode%3E200120%3C%2FpostCode%3E%0D%0A++%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A++%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A++%3Cprov%3E%E4%B8%8A%E6%B5%B7%3C%2Fprov%3E%0D%0A++%3Ccity%3E%E4%B8%8A%E6%B5%B7%E5%B8%82%3C%2Fcity%3E%0D%0A++%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A+%3C%2Freceiver%3E%0D%0A+%3CsendStartTime%3E2012-06-25+08%3A00%3A00%3C%2FsendStartTime%3E%0D%0A+%3CsendEndTime%3E2012-06-25+12%3A00%3A00+%3C%2FsendEndTime%3E%0D%0A+%3CgoodsValue%3E1900%3C%2FgoodsValue%3E%0D%0A+%3CitemsValue%3E2000%3C%2FitemsValue%3E%0D%0A+%3Citems%3E%0D%0A++%3Citem%3E%0D%0A+++%3CitemName%3ENokia+N73%3C%2FitemName%3E%0D%0A+++%3Cnumber%3E2%3C%2Fnumber%3E%0D%0A+++%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A++%3C%2Fitem%3E%0D%0A++%3Citem%3E%0D%0A+++%3CitemName%3ENokia+N72%3C%2FitemName%3E%0D%0A+++%3Cnumber%3E1%3C%2Fnumber%3E%0D%0A+++%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A++%3C%2Fitem%3E%0D%0A+%3C%2Fitems%3E%0D%0A+%3Cspecial%3E0%3C%2Fspecial%3E%0D%0A+%3Cremark%3E%E6%98%93%E7%A2%8E%E5%93%81%3C%2Fremark%3E%0D%0A%3C%2FRequestOrder%3E&data_digest=Ry2Bdu8FeJz8GH%2BimM2E4g%3D%3D&msg_type=ORDERCREATE(String), <responses><logisticProviderID>YTO</logisticProviderID><responseItems><response><txLogisticID>LP070623008857703</txLogisticID><success>true</success></response></responseItems></responses>(String), 3(Integer), 3(String), LP070623008857703(String)
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-05 11:14:34  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 32036(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7d24(String), K22000014:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 11:14:35.133(Timestamp), null, 32036(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: null, K22000014(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, null, null, null, null, null, null, null, null, null, null, null, 1(String), null, 1(String), null, null, null, null, 张丹(String), null, 2013-08-05 11:14:35.132(Timestamp), K00000014(String), null, null, null, null, (String), null, 32036(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-05 11:14:35  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 32036(Integer), 32036(Integer)
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 32036(Integer)
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:14:36  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:14:37  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:37  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:37  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:14:40  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-05(String), 2013-08-06(String)
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-05(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:14:41  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:14:42  DEBUG [24368579@qtp-25417229-5] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-26(String)
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-26(String), 0(Integer), 50(Integer)
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:18:13  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:18:14  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-27(String)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-27(String), 0(Integer), 50(Integer)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:18:20  DEBUG [13050541@qtp-25417229-4] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-27(String)
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:18:54  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-06-15(String), 2013-06-27(String), 0(Integer), 50(Integer)
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:18:55  DEBUG [4354014@qtp-25417229-7] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:19:45  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:19:52  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:52  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:19:52  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:19:52  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:52  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:19:53  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 32036(Integer)
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:20:05  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:20:09  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:09  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:09  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:09  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:09  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:20:09  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:20:10  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:10  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:10  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:10  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:20:10  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:20:15  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:20:15  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:20:23  DEBUG [12695936@qtp-25417229-10] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:21:28  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:21:30  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:22:18  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:22:18  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:22:18  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:22:23  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:22:23  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:22:23  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:23:21  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:21  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:23:21  DEBUG [29971895@qtp-25417229-11] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:23:21  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:23:27  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:23:28  DEBUG [27010053@qtp-25417229-12] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:24:39  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:24:39  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:24:39  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:24:48  DEBUG [20891438@qtp-25417229-14] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:26:32  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:26:32  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:26:32  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:29:53  DEBUG [31826988@qtp-25417229-19] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:32:43  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String)
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 2013-08-03(String), 2013-08-06(String), 0(Integer), 50(Integer)
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-05 11:32:47  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: null
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-05 11:32:48  DEBUG [7143532@qtp-25417229-13] (Slf4jImpl.java:28) - ==> Parameters: 32036(String)
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:34:57  DEBUG [5589457@qtp-25417229-21] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: LP070623008857703(String)
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), 1225694979(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-05 11:38:39.028(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t2(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 14385(Integer), 0(Integer), null, null, null
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 14385(Integer), 0(Integer), null, null, null
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: 14385(Integer)
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 14385(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 14385(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: 14385(Integer), null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t2(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_SEND_TASK (request_url,order_id,last_send_time,client_id,request_params,remark,task_flag_id,task_flag,tx_logistic_id) values (?, ?,now(),?,?,?,?,?,?); 
2013-08-05 11:38:39  DEBUG [23377243@qtp-25417229-22] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer), TAOBAO(String), logistics_interface=%3CRequestOrder%3E%0D%0A+%3CecCompanyId%3ETaobao%3C%2FecCompanyId%3E%0D%0A+%3ClogisticProviderID%3EYTO%3C%2FlogisticProviderID%3E%0D%0A+%3CcustomerId%3EK00000014%3C%2FcustomerId%3E%0D%0A+%3CtxLogisticID%3ELP070623008857703%3C%2FtxLogisticID%3E+%0D%0A+%3CtradeNo%3E2007082300225725%3C%2FtradeNo%3E%0D%0A+%3CmailNo%3E1225694979%3C%2FmailNo%3E++++%0D%0A+%3CtotalServiceFee%3E3200%3C%2FtotalServiceFee%3E%0D%0A+%3CcodSplitFee%3E2000%3C%2FcodSplitFee%3E%0D%0A+%3CbuyServiceFee%3E1000%3C%2FbuyServiceFee%3E%0D%0A+%3CorderType%3E1%3C%2ForderType%3E%0D%0A+%3CserviceType%3E1%3C%2FserviceType%3E+%0D%0A+%3Csender%3E%0D%0A++%3Cname%3E%E6%B5%8B%E8%AF%95t2%3C%2Fname%3E%0D%0A++%3CpostCode%3E476000%3C%2FpostCode%3E%0D%0A++%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A++%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A++%3Cprov%3E%E6%B5%99%E6%B1%9F%3C%2Fprov%3E%0D%0A++%3Ccity%3E%E6%9D%AD%E5%B7%9E%3C%2Fcity%3E%0D%0A++%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A+%3C%2Fsender%3E%0D%0A+%3Creceiver%3E%0D%0A++%3Cname%3E%E6%9D%8E%E5%9B%9B%3C%2Fname%3E%0D%0A++%3CpostCode%3E200120%3C%2FpostCode%3E%0D%0A++%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A++%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A++%3Cprov%3E%E4%B8%8A%E6%B5%B7%3C%2Fprov%3E%0D%0A++%3Ccity%3E%E4%B8%8A%E6%B5%B7%E5%B8%82%3C%2Fcity%3E%0D%0A++%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A+%3C%2Freceiver%3E%0D%0A+%3CsendStartTime%3E2012-06-25+08%3A00%3A00%3C%2FsendStartTime%3E%0D%0A+%3CsendEndTime%3E2012-06-25+12%3A00%3A00+%3C%2FsendEndTime%3E%0D%0A+%3CgoodsValue%3E1900%3C%2FgoodsValue%3E%0D%0A+%3CitemsValue%3E2000%3C%2FitemsValue%3E%0D%0A+%3Citems%3E%0D%0A++%3Citem%3E%0D%0A+++%3CitemName%3ENokia+N73%3C%2FitemName%3E%0D%0A+++%3Cnumber%3E2%3C%2Fnumber%3E%0D%0A+++%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A++%3C%2Fitem%3E%0D%0A++%3Citem%3E%0D%0A+++%3CitemName%3ENokia+N72%3C%2FitemName%3E%0D%0A+++%3Cnumber%3E1%3C%2Fnumber%3E%0D%0A+++%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A++%3C%2Fitem%3E%0D%0A+%3C%2Fitems%3E%0D%0A+%3Cspecial%3E0%3C%2Fspecial%3E%0D%0A+%3Cremark%3E%E6%98%93%E7%A2%8E%E5%93%81%3C%2Fremark%3E%0D%0A%3C%2FRequestOrder%3E&data_digest=cbiGBszHnXAElYcY6b7qrw%3D%3D&msg_type=ORDERCREATE(String), <responses><logisticProviderID>YTO</logisticProviderID><responseItems><response><txLogisticID>LP070623008857703</txLogisticID><success>true</success></response></responseItems></responses>(String), 3(Integer), 3(String), LP070623008857703(String)
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:40:00  DEBUG [24809835@qtp-25417229-24] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: LP070623008857703(String)
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), 1225694979(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-05 11:42:57.382(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t2(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 14387(Integer), 0(Integer), null, null, null
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 14387(Integer), 0(Integer), null, null, null
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: 14387(Integer)
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 14387(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:42:57  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 14387(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:45:02  DEBUG [22251464@qtp-25417229-26] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:46:17  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:46:17  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-05 11:46:17  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: LP070623008857703(String)
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), 1225694979(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-05 11:46:17.408(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t2(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 14392(Integer), 0(Integer), null, null, null
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 14392(Integer), 0(Integer), null, null, null
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: 14392(Integer)
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 14392(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-05 11:47:59  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 14392(Integer), 2.0(Double), LP070623008857703(String), null
2013-08-05 11:49:37  DEBUG [2429258@qtp-25417229-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:49:37  DEBUG [2429258@qtp-25417229-31] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-05 11:49:37  DEBUG [2429258@qtp-25417229-31] (Slf4jImpl.java:28) - ==> Parameters: LP070623008857703(String)
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:50:06  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 11:55:09  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:00:14  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:05:18  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:10:21  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:15:24  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:20:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:25:28  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:30:31  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:35:35  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:40:39  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 12:45:43  DEBUG [33550995@qtp-25417229-32] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:07:06  DEBUG [19804564@qtp-25417229-33] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:07:06  DEBUG [3812099@qtp-25417229-34] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:10:50  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-05 13:10:50  DEBUG [4123942@qtp-25417229-28] (Slf4jImpl.java:28) - ==> Parameters: 14387(Integer), null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t2(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:12:27  DEBUG [17195887@qtp-25417229-36] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:13:29  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-05 13:13:29  DEBUG [699541@qtp-25417229-27] (Slf4jImpl.java:28) - ==> Parameters: 14392(Integer), null, YTO(String), LP070623008857703(String), 2007082300225725(String), K00000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t2(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:17:30  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:22:33  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:27:36  DEBUG [21270432@qtp-25417229-37] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:32:40  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:37:42  DEBUG [19432744@qtp-25417229-38] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:41:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:41:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 13:41:18  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 13:41:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:41:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 13:41:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:42:46  DEBUG [7411472@qtp-25417229-39] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:57:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:57:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 13:57:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 13:57:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:57:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 13:57:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32036(Integer)
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 1(String), 1(String)
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 13:57:56  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: K00000014(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 13:58:51  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:58:51  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-05 13:58:51  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@7d24(String)
2013-08-05 13:58:52  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:58:52  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-05 13:58:52  DEBUG [12328574@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@7d24(String), K22000014:登录系统,ip:10.1.198.71,ip:124.74.41.130,ip:124.74.41.130(String), 2013-08-01 13:32:36.0(Timestamp), 2013-08-05 13:58:52.019(Timestamp), 32036(Integer), 2052894(Integer)
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), oHFJW3S2WjRVnHYifgYzpA==(String)
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-05 13:59:02  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String)
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 13:59:09.92(Timestamp), null, 31886(Integer)
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 13:59:09  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-05 13:59:09.92(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-08-05 13:59:10  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-08-05 13:59:11  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:11  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:59:11  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 13:59:15  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:15  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:59:15  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 13:59:50  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:50  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 13:59:50  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 31452(Integer), 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 7558(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 33044(Integer), 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 21405(Integer), 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 85646(Integer), 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 71393(Integer), 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 30113(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 15586(Integer), 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 49397(Integer), 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 50214(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 70605(Integer), 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 2867(Integer), 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 84451(Integer), 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 13:59:51  DEBUG [8175188@qtp-10612370-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 13881(Integer), 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 77325(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 94246(Integer), 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 50934(Integer), 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 68699(Integer), 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 61714(Integer), 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 56496(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 59645(Integer), 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 9006(Integer), 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 73013(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 84734(Integer), 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 31971(Integer), 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 67827(Integer), 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:00:29  DEBUG [33177513@qtp-10612370-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:02:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:02:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:02:20  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:20  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:02:20  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:02:48  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:48  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice where flag=1 and service_type!=0 
2013-08-05 14:02:48  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:02:49  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 16717(Integer), 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 22321(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 37209(Integer), 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 21410(Integer), 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 30849(Integer), 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 92370(Integer), 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 61510(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 81753(Integer), 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 23102(Integer), 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 8574(Integer), 0(String), 你好(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 15707(Integer), 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 1687(Integer), 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(sequenceID,dest_mobile,message_content,Pk_total) values(?,?,?,?); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 29553(Integer), 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:02:59  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:05:00  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:05:00  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:05:00  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:10:04  DEBUG [14304027@qtp-15890762-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:15:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:15:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:15:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:15:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:15:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:15:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 14:16:02.935(Timestamp), null, 31886(Integer)
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 14:16:02  DEBUG [3052677@qtp-8591756-4] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-05 14:16:02.935(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:02  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 14:16:03.031(Timestamp), null, 31886(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-05 14:16:03.031(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-08-05 14:16:03  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-08-05 14:16:04  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:04  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:16:04  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:16:05  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:05  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:16:05  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:16:10  DEBUG [31439056@qtp-8591756-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:36:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:37:11  DEBUG [6740560@qtp-5167690-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:11  DEBUG [6740560@qtp-5167690-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:37:11  DEBUG [6740560@qtp-5167690-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:37:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:37  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:37:37  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:37:37  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:37  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:37:37  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: admin(String), 1(String), 1(String)
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 14:37:51.947(Timestamp), null, 31886(Integer)
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 14:37:51  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 31886(Integer)
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 14:37:51  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-05 14:37:51.947(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7c8e(String), admin:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-05 14:37:52.002(Timestamp), null, 31886(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: null, admin(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 021-69772938(String), 13774460310(String), 上海(String), 上海市辖区(String), 青浦区(String), 华新镇华徐公路3029弄27号(String), F(String), 管理员(String), null, 997715627caozhi@sina.com(String), 1(String), 771037(String), 3(String), (String), 1(String), (String), null, 圆通渠道信息员(String), 10000(String), 管理员(String), 11119(String), 2013-08-05 14:37:52.002(Timestamp), (String), 310000(String), ,NDU2,RXhy,MTIz(String), (String), null, null, null, 31886(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? ORDER BY seq asc,create_time desc limit ? 
2013-08-05 14:37:52  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 6(Integer)
2013-08-05 14:37:53  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:37:53  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:37:53  DEBUG [32655624@qtp-20973025-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:38:19  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:38:19  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:38:19  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:38:26  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:38:26  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:38:26  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:38:45  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:38:45  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?) select @@identity 
2013-08-05 14:38:45  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:38:46  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:38:46  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(sequenceID); 
2013-08-05 14:38:46  DEBUG [25355333@qtp-20973025-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer)
2013-08-05 14:38:46  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:38:46  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:38:46  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?) select @@identity 
2013-08-05 14:39:08  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:39:12  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:39:12  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(sequenceID); 
2013-08-05 14:39:12  DEBUG [28325886@qtp-20973025-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer)
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:40:48  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice where flag=1 and service_type!=0 
2013-08-05 14:40:52  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:40:53  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:53  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:40:53  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:40:54  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:54  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:40:54  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); select @@identity; 
2013-08-05 14:40:58  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:41:01  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:41:01  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(sequenceID); 
2013-08-05 14:41:01  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer)
2013-08-05 14:41:09  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:41:09  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:41:09  DEBUG [9144209@qtp-572135-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:46:36  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:46:36  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:36  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:46:36  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:46:38  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:38  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:46:38  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:46:39  DEBUG [17331613@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:39  DEBUG [17331613@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:46:39  DEBUG [17331613@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:46:43  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:46:51  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:51  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:46:51  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:46:56  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:46:57  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:57  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:46:57  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:46:58  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select @@identity) where id=(select @@identity); 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:47:01  DEBUG [24918309@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:48:43  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:48:44  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:44  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:48:44  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:48:44  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:44  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice where flag=1 and service_type!=0 
2013-08-05 14:48:44  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:48:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:48:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:48:46  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:46  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:48:46  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:48:50  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:50  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 14:48:50  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(select max(id) from ec_core_sms_wait) where id=(select max(id) from ec_core_sms_wait); 
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:48:51  DEBUG [33468133@qtp-11898483-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:51:40  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:51:40  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:51:40  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 14:54:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 14:56:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 14:56:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 14:56:45  DEBUG [16828388@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:00:53  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:00:53  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:00:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 15:00:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:00:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:00:54  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 15:01:00  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:00  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice where flag=1 and service_type!=0 
2013-08-05 15:01:00  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:01:01  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:06  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: null, null
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:01:07  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:01:50  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:01:50  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:01:50  DEBUG [10713624@qtp-19319578-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:02:07  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_payservice where flag=1 and service_type!=0 
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:02:12  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:02:13  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:13  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:02:13  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: delete from ec_core_sms_wait where status = ? 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212206(Integer), 212206(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212207(Integer), 212207(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 3(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212208(Integer), 212208(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212209(Integer), 212209(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 5(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212210(Integer), 212210(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 6(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212211(Integer), 212211(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212212(Integer), 212212(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 8(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212213(Integer), 212213(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 9(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212214(Integer), 212214(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), 你好(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212215(Integer), 212215(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 11(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212216(Integer), 212216(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 12(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212217(Integer), 212217(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_sms_wait(dest_mobile,message_content,Pk_total) values(?,?,?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 13(String), 你好，测试短信内容！(String), 1(Integer)
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select id from ec_core_sms_wait where id=(select max(id) from ec_core_sms_wait) 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sequenceID=(?) where id=(?); 
2013-08-05 15:02:17  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 212218(Integer), 212218(Integer)
2013-08-05 15:02:18  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:02:18  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:02:18  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: update ec_core_sms_wait set sms_type = ? where status = ? 
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 999(String), 8(String)
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 15:03:22  DEBUG [2944493@qtp-23986467-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 15:03:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:03:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:03:58  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 15:03:59  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 15:03:59  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 15:03:59  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 16:12:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:13  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 16:12:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 16:12:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:12:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:12:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:12:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:12:41  DEBUG [627822@qtp-12970890-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:41  DEBUG [627822@qtp-12970890-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:12:41  DEBUG [627822@qtp-12970890-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:12:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:12:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:14:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:14:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 16:15:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:16:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:16:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:44  DEBUG [5722961@qtp-12970890-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:44  DEBUG [5722961@qtp-12970890-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:17:44  DEBUG [5722961@qtp-12970890-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:17:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:17:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 16:18:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:18:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:18:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:19:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:19:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:20:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:20:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 16:21:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:21:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:21:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:46  DEBUG [957148@qtp-12970890-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:46  DEBUG [957148@qtp-12970890-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:22:46  DEBUG [957148@qtp-12970890-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:25:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-05 16:25:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:25:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:25:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:49  DEBUG [11616462@qtp-12970890-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:49  DEBUG [11616462@qtp-12970890-14] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:27:49  DEBUG [11616462@qtp-12970890-14] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 16:29:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 16:29:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 16:29:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:29:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 16:29:32  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 1(String), 1(String)
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@147(String), 220029:登录系统,ip:192.168.4.165,ip:192.168.4.230,ip:192.168.4.230(String), 2013-08-05 16:31:24.886(Timestamp), null, 327(Integer)
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-05 16:31:24  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: null, 220029(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 022-25878792(String), 13920416887(String), 天津(String), 天津市(String), 滨海新区(String), 新河幸福楼5-6栋之间(String), M(String), null, null, 303914052@qq.com(String), 1(String), null, 2(String), null, 1(String), null, null, null, 220029(String), 天津市塘沽区分公司(String), 220029(String), 2013-08-05 16:31:24.886(Timestamp), 327(String), 120000(String), ,ODcx,bmk2,MTk4(String), null, null, null, null, 327(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 220029(String)
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-05 16:31:25  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-05 16:31:26  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-05 16:31:26  DEBUG [26513893@qtp-17616563-12] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:31:26  DEBUG [23337251@qtp-17616563-6] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:31:27  DEBUG [5375079@qtp-17616563-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:27  DEBUG [5375079@qtp-17616563-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-05 16:31:27  DEBUG [5375079@qtp-17616563-3] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 220029(String), 3(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-26(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-27(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-28(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-29(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-30(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-07-31(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-01(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-02(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-03(String)
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-05 16:31:27  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 2013-08-04(String)
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:31:28  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:31:29  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:31:34  DEBUG [31680683@qtp-17616563-4] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:32:52  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:52  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:32:52  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 790(Integer), 788(Integer), 13524591387(String), (String), zhidongm@sina.com(String), true(Boolean), true(Boolean), 2013-08-05 16:32:56.0(Timestamp), K22002904(String)
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:32:56  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:32:57  DEBUG [17373271@qtp-17616563-8] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:36:57  DEBUG [10021866@qtp-17616563-10] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:37:56  DEBUG [33068612@qtp-17616563-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:37:56  DEBUG [33068612@qtp-17616563-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:37:56  DEBUG [33068612@qtp-17616563-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:41:57  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:42:59  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:42:59  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:42:59  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:45:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:45:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:45:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String), 0(Integer)
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22000014(String)
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:16  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:18  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:46:42  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:42  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:46:42  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:46:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:47:43  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:48:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:48:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:48:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:48:20  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:20  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:48:20  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:48:21  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:49:44  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:44  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:49:44  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 1790(Integer), 1788(Integer), 13524591387(String), (String), zhidongm@sina.com(String), true(Boolean), true(Boolean), 2013-08-05 16:49:45.0(Timestamp), K22002904(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:49:45  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:50:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:50:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:50:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:50:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:50:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:50:50  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:50:51  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:50:52  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:51:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:51:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:51:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:51:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:53:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:53:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:53:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:53:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:54:09  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:55:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:55:05  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:55:06  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: update zebra_forewarn set branck_id=?, branck_warn_value=?, customer_warn_value=?, phone=?, send_phone_state=0, send_mail_state=0, remark_phone=?, email=?, phone_warn=?, email_warn=?, update_time=? where customer_code=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 327(Integer), 1700(Integer), 1698(Integer), 13524591387(String), (String), zhidongm@sina.com(String), true(Boolean), true(Boolean), 2013-08-05 16:55:38.0(Timestamp), K22002904(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:55:38  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:55:39  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:55:55  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:55:56  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:58:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:58:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 16:58:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:58:35  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:58:36  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:58:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:59:22  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:59:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:59:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 16:59:25  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:03  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:00:04  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:00:30  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:00:31  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:01:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:01:10  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:01:11  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:01:40  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:01:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:02:41  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:03:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:03:15  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:03:53  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:03:54  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:05:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_userthread where site_code=? 
2013-08-05 17:05:07  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and is_use=? 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String), 0(Integer)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(waybill_no) from zebra_surfacebill where current_user_no=? and (is_use=1 or is_use=2) 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from zebra_forewarn where customer_code=? 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: K22002904(String)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:05:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:08:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:08:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:08:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:08:17  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:13:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:13:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:13:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:13:19  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 327(Integer)
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-05 17:18:08  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 220029(String), 0(String), 2(String), 2013-07-27 00:00:00.0(Timestamp), 2013-08-06 00:00:00.0(Timestamp), 0(String)
2013-08-05 17:18:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:18:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:18:23  DEBUG [32821080@qtp-17616563-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 17:23:28  DEBUG [4898566@qtp-17616563-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:23:28  DEBUG [4898566@qtp-17616563-17] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:23:28  DEBUG [4898566@qtp-17616563-17] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 17:28:31  DEBUG [14009391@qtp-17616563-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 17:28:31  DEBUG [14009391@qtp-17616563-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 17:28:31  DEBUG [14009391@qtp-17616563-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 18:13:11  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:13:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:13:11  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 18:13:11  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-05 18:13:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:13:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:13:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:13:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:13:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:13:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:03  DEBUG [29322157@qtp-13887551-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:03  DEBUG [29322157@qtp-13887551-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-05 18:14:03  DEBUG [29322157@qtp-13887551-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 31886(Integer)
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String), 2013-07-06(String), 2013-08-05(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-05 18:14:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
