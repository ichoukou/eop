2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 09:16:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 09:56:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 09:56:38  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:38  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:56:38  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7d0e(String), K56566403:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 09:56:39.181(Timestamp), null, 32014(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: null, K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13978908976(String), 湖北省(String), 黄石市(String), 黄石港区(String), 测试街道(String), M(String), 中煤基业(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 100009(String), 中煤基业有限责任公司(String), K10000903(String), 2013-08-01 09:56:39.181(Timestamp), 32014K10000903(String), null, null, null, null, null, null, 32014(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:39  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer), 32014(Integer)
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 09:56:40  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:41  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-01 09:56:41  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:43  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 09:56:44  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String), 0(Integer), 50(Integer)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:56:45  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 09:56:46  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:46  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 09:56:46  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 09:56:49  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:49  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-01 09:56:49  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@7d0e(String)
2013-08-01 09:56:50  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:50  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-01 09:56:50  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@7d0e(String), K56566403:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-25 09:58:09.0(Timestamp), 2013-08-01 09:56:50.006(Timestamp), 32014(Integer), 2052686(Integer)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7d0e(String), K56566403:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 09:56:57.843(Timestamp), null, 32014(Integer)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: null, K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13978908976(String), 湖北省(String), 黄石市(String), 黄石港区(String), 测试街道(String), M(String), 中煤基业(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 100009(String), 中煤基业有限责任公司(String), K10000903(String), 2013-08-01 09:56:57.843(Timestamp), 32014K10000903(String), null, null, null, null, null, null, 32014(Integer)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:57  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer), 32014(Integer)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:58  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-01 09:56:58  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:56:59  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 09:57:00  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:00  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 09:57:00  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String), 0(Integer), 50(Integer)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 09:57:01  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@7d0e(String)
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-01 09:57:04  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@7d0e(String), K56566403:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-07-25 09:58:09.0(Timestamp), 2013-08-01 09:57:04.637(Timestamp), 32014(Integer), 2052686(Integer)
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K5327440(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 09:57:37  DEBUG [3096544@qtp-13547746-3] (Slf4jImpl.java:28) - ==> Parameters: K5327440(String)
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 09:58:13  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), ZFN7Vjjp3UoGVdXSWPBzUw==(String)
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 09:58:31  DEBUG [21402892@qtp-13547746-5] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 1(String), 1(String)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@c(String), 100009:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 09:58:49.744(Timestamp), null, 12(Integer)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: null, 100009(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), 010-64262238(String), 18001387001(String), 北京(String), 北京市(String), 朝阳区(String), 黄寺大街12号华沛写字楼A座一层(String),  M(String), null, null, 363169133@qq.com(String),  1(String), 771037(String), 2(String), null, 1(String), null, null, null, 100009(String), 和记黄埔（中国）商贸有限公司(String), 100009(String), 2013-08-01 09:58:49.744(Timestamp), 12(String), 110000(String), ,MDAwMDk=,TXZBYw==,eXRvMQ==(String), true(String), null, null, null, 12(Integer)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), 100009(String)
2013-08-01 09:58:49  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-01 09:58:50  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 100009(String), 3(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-22(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-23(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-24(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-25(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-26(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-27(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-28(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-29(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-30(String)
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:58:50  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer), 2013-07-31(String)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 2(String)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 100009(String)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT DISTINCT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE site_id = ? AND account_type = '2' 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 12(Integer)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 12(Integer)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 100009(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:58:52  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(String)
2013-08-01 09:58:53  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:53  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? , ? , ? ) order by updateTime DESC 
2013-08-01 09:58:53  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 31605(String), 31862(String), 12(String)
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@c(String)
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-01 09:58:57  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@c(String), 100009:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-06-04 16:25:38.0(Timestamp), 2013-08-01 09:58:57.252(Timestamp), 12(Integer), 2051767(Integer)
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 1(String), 1(String)
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 09:59:05  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 09:59:05.995(Timestamp), null, 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: null, w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String),  0951-6132509(String), 15909611338(String), 天津(String), 天津市(String), 和平区(String), 111(String),  M(String), null, null, huhuaiwent@163.com(String),  1(String), null, 2(String), null, 1(String), null, null, null, w00132(String), 宁夏圆顺通物流有限公司(String), w00132(String), 2013-08-01 09:59:05.995(Timestamp), 16573(String), 120000(String), ,MTEx,M1BF,MTEx(String), null, VjYy(String), MTIz(String), (String), 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 1(String), w00132(String)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-22(String)
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-01 09:59:06  DEBUG [8818851@qtp-13547746-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), w00132(String), 3(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-23(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-24(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-25(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-26(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-27(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-28(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-29(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-30(String)
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 09:59:06  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-31(String)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT DISTINCT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE site_id = ? AND account_type = '2' 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(String)
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? , ? , ? ) order by updateTime DESC 
2013-08-01 09:59:08  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 31605(String), 31862(String), 16573(String)
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_STATS_MESSAGE t WHERE t.stats_reason = ? 
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: net.ytoec.kernel.dataobject.User@40bd(String)
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==>  Executing: update EC_CORE_STATS_MESSAGE t set t.stats_type = ?, t.stats_reason = ?, t.remark = ?, t.login_time = ?, t.logout_time = ?, t.user_id = ?, t.update_time = now() where t.id = ? 
2013-08-01 09:59:12  DEBUG [7434908@qtp-13547746-2] (Slf4jImpl.java:28) - ==> Parameters: 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-06-04 18:19:08.0(Timestamp), 2013-08-01 09:59:12.432(Timestamp), 16573(Integer), 2051784(Integer)
2013-08-01 10:00:21  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:00:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 10:00:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 10:00:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:00:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 10:00:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 10:25:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:25:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 10:25:40  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 10:25:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:25:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 10:25:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String), ZFN7Vjjp3UoGVdXSWPBzUw==(String)
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 10:26:24  DEBUG [25355333@qtp-25321487-2] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String)
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String), ZFN7Vjjp3UoGVdXSWPBzUw==(String)
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 10:26:25  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String)
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String), ZFN7Vjjp3UoGVdXSWPBzUw==(String)
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 10:26:26  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K53527440(String)
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 10:26:48  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: etongtest(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@7d0e(String), K56566403:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 10:27:04.4(Timestamp), null, 32014(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: null, K56566403(String), 4QrcOUm6Wau+VuBX8g+IPg==(String), null, 13978908976(String), 湖北省(String), 黄石市(String), 黄石港区(String), 测试街道(String), M(String), 中煤基业(String), null, null, 1(String), null, 1(String), null, 1(String), null, null, null, 100009(String), 中煤基业有限责任公司(String), K10000903(String), 2013-08-01 10:27:04.4(Timestamp), 32014K10000903(String), null, null, null, null, null, null, 32014(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 10:27:04  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 1(String), 6(Integer)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_user_relation where user_id = ? or related_user_id = ? order by create_time 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer), 32014(Integer)
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 10:27:05  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 32014(Integer)
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:27:06  DEBUG [20628882@qtp-25321487-4] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "0" order by o.partitiondate desc 
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SIGNED" order by o.partitiondate desc 
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND o.status = "SENT_SCAN" order by o.partitiondate desc 
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT count(DISTINCT o.mailNo) FROM EC_CORE_ORDER o WHERE o.customer_id IN ( ? ) AND o.partitiondate between ? and ? AND (o.status != "0" and o.status != "SENT_SCAN" and o.status != "SIGNED") order by o.partitiondate desc 
2013-08-01 10:27:06  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-31(String), 2013-07-31(String)
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:27:09  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 10:27:10  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String)
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String), 0(Integer), 50(Integer)
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:27:12  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 10:27:12  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 10:27:15  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:27:15  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:27:50  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:50  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 10:27:50  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String)
2013-08-01 10:27:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:27:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 10:27:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-08-01(String), 2013-08-02(String), 0(Integer), 50(Integer)
2013-08-01 10:28:31  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:31  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:28:31  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 10:28:32  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-01(String), 2013-08-01(String)
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 10:28:55  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-01(String), 2013-08-01(String), 0(Integer), 50(Integer)
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 10:28:56  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? 
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-01(String), 2013-08-01(String)
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_print WHERE parent_id in ('0', '1') AND is_send = 'N' AND customer_id = ? AND partitiondate >= ? AND partitiondate < ? ORDER BY create_time DESC LIMIT ?, ? 
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 2013-07-01(String), 2013-08-01(String), 0(Integer), 50(Integer)
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_code = ? 
2013-08-01 10:29:52  DEBUG [14585814@qtp-25321487-7] (Slf4jImpl.java:28) - ==> Parameters: K10000903(String)
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_code = ? 
2013-08-01 10:29:52  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==> Parameters: undefined(String)
2013-08-01 10:29:53  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:29:53  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==>  Executing: select * from ec_core_order_express WHERE storeId IN ( ? ) order by updateTime DESC 
2013-08-01 10:29:53  DEBUG [9144209@qtp-25321487-6] (Slf4jImpl.java:28) - ==> Parameters: 32014(String)
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:32:52  DEBUG [16630658@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:37:56  DEBUG [27978942@qtp-25321487-11] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:43:01  DEBUG [15008277@qtp-25321487-16] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:48:02  DEBUG [26639075@qtp-25321487-17] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 10:53:05  DEBUG [23548317@qtp-25321487-20] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:08:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:08:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:08:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 11:08:03  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:08:03  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:08:03  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:08:14  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:13:19  DEBUG [23203203@qtp-25321487-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:18:22  DEBUG [15248531@qtp-25321487-10] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:23:25  DEBUG [16954793@qtp-25321487-15] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:28:29  DEBUG [6127504@qtp-25321487-20] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:31:33  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:31:33  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:31:33  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 11:31:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:31:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:31:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:33:33  DEBUG [18947835@qtp-25321487-21] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:38:37  DEBUG [688347@qtp-25321487-25] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:43:40  DEBUG [2410155@qtp-25321487-28] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:48:43  DEBUG [33286075@qtp-25321487-31] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:49:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:49:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:49:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 11:49:26  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:49:26  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 11:49:26  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:53:48  DEBUG [30820713@qtp-31469867-6] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 11:58:51  DEBUG [32149440@qtp-31469867-9] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:03:55  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:08:59  DEBUG [11048698@qtp-31469867-12] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:14:03  DEBUG [10041795@qtp-31469867-16] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:19:06  DEBUG [6253924@qtp-31469867-20] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:24:11  DEBUG [33060946@qtp-31469867-24] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:29:16  DEBUG [14100610@qtp-31469867-29] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:34:20  DEBUG [7978148@qtp-31469867-33] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:39:23  DEBUG [16578531@qtp-31469867-37] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:44:27  DEBUG [8559249@qtp-31469867-41] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:49:31  DEBUG [14599898@qtp-31469867-46] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:54:36  DEBUG [2419940@qtp-31469867-51] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 12:59:19  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 12:59:41  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 12:59:42  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 12:59:42  DEBUG [5033948@qtp-16932767-3] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:02:41  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:02:41  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 13:02:41  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: LP070823098877889(String)
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070823098877889(String), 2007082300225725(String), 31883K22000014(String), 1245645889(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-01 13:02:46.143(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t1(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 6672(Integer), 0(Integer), null, null, null
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 6672(Integer), 0(Integer), null, null, null
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 6672(Integer)
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 6672(Integer), 2.0(Double), LP070823098877889(String), null
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 6672(Integer), 2.0(Double), LP070823098877889(String), null
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 13:02:46  DEBUG [14339879@qtp-16932767-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:04:46  DEBUG [7201220@qtp-16932767-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:09:24  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:09:24  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:09:24  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 13:09:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:09:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:09:25  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 13:09:50  ERROR [14339879@qtp-16932767-4] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.Connection was implicitly closed by the driver.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy220.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:50)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:28)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:122)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:59)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy70.addOrderPrint(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderPrintDaoImpl.addOrderPrint(OrderPrintDaoImpl.java:77)
	at net.ytoec.kernel.dao.impl.OrderPrintDaoImpl.addOrderPrint(OrderPrintDaoImpl.java:1)
	at net.ytoec.kernel.service.impl.OrderPrintServiceImpl.addOrderPrint(OrderPrintServiceImpl.java:116)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.addOrderPrintMethod(OrderServiceImpl.java:3754)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.addOrderFormInfo(OrderServiceImpl.java:399)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy71.addOrderFormInfo(Unknown Source)
	at net.ytoec.kernel.action.remote.TaoBaoOrderAction.orderCreate(TaoBaoOrderAction.java:386)
	at net.ytoec.kernel.action.remote.TaoBaoOrderAction.vipOrderServlet(TaoBaoOrderAction.java:300)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:452)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:291)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:254)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:176)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:263)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:133)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:207)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:207)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:190)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:75)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:94)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:243)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInter2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ooo Connection Opened
nvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:270)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:176)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:190)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:187)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at net.ytoec.kernel.interceptor.SessionInterceptor.intercept(SessionInterceptor.java:121)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:52)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:498)
	at org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:434)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 388,931 milliseconds ago.  The last packet sent successfully to the server was 388,938 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1122)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3317)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1941)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2114)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2690)
	at com.mysql.jdbc.ConnectionImpl.rollbackNoChecks(ConnectionImpl.java:4925)
	at com.mysql.jdbc.ConnectionImpl.rollback(ConnectionImpl.java:4810)
	at com.mysql.jdbc.ConnectionImpl.realClose(ConnectionImpl.java:4418)
	at com.mysql.jdbc.ConnectionImpl.close(ConnectionImpl.java:1555)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.close(NewPooledConnection.java:549)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.close(NewPooledConnection.java:234)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.destroyResource(C3P0PooledConnectionPool.java:470)
	at com.mchange.v2.resourcepool.BasicResourcePool$1DestroyResourceTask.run(BasicResourcePool.java:964)
	at com.mchange.v2.resourcepool.BasicResourcePool.destroyResource(BasicResourcePool.java:989)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$100(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$5.run(BasicResourcePool.java:1174)
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3298)
	... 14 more
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:09:50  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: LP070823098877889(String)
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070823098877889(String), 2007082300225725(String), 31883K22000014(String), 1245645889(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-01 13:10:31.332(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t1(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 6673(Integer), 0(Integer), null, null, null
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 6673(Integer), 0(Integer), null, null, null
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 6673(Integer)
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 6673(Integer), 2.0(Double), LP070823098877889(String), null
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 6673(Integer), 2.0(Double), LP070823098877889(String), null
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 13:10:31  DEBUG [23468085@qtp-16932767-12] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:14:54  DEBUG [26092992@qtp-16932767-16] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:16:30  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: LP070823002250789(String)
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070823002250789(String), 2007082300225725(String), 31883K22000014(String), 1245794989(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-01 13:17:26.154(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t1(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 6674(Integer), 0(Integer), null, null, null
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 6674(Integer), 0(Integer), null, null, null
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 6674(Integer)
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 6674(Integer), 2.0(Double), LP070823002250789(String), null
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 6674(Integer), 2.0(Double), LP070823002250789(String), null
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 13:17:26  DEBUG [22602840@qtp-7375615-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:19:57  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:20:46  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:20:46  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:20:46  DEBUG [6212272@qtp-7375615-5] (Slf4jImpl.java:28) - ==> Parameters: LP070823002250789(String)
2013-08-01 13:20:55  ERROR [6212272@qtp-7375615-5] (Slf4jImpl.java:20) - Error calling Connection.prepareStatement:
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:409)
	at com.mysql.jdbc.Util.getInstance(Util.java:384)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:929)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1204)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1191)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4276)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4242)
	at com.mysql.jdbc.ConnectionImpl.prepareStatement(ConnectionImpl.java:4251)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:399)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:35)
	at $Proxy220.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:39)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:55)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:28)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:122)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:338)
	at $Proxy32.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:59)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:25)
	at $Proxy47.add(Unknown Source)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.addOrder(OrderDaoImpl.java:41)
	at net.ytoec.kernel.dao.impl.OrderDaoImpl.addOrder(OrderDaoImpl.java:1)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.addOrderMethod(OrderServiceImpl.java:3909)
	at net.ytoec.kernel.service.impl.OrderServiceImpl.addOrderFormInfo(OrderServiceImpl.java:374)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at $Proxy71.addOrderFormInfo(Unknown Source)
	at net.ytoec.kernel.action.remote.TaoBaoOrderAction.orderCreate(TaoBaoOrderAction.java:386)
	at net.ytoec.kernel.action.remote.TaoBaoOrderAction.vipOrderServlet(TaoBaoOrderAction.java:300)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeAction(DefaultActionInvocation.java:452)
	at com.opensymphony.xwork2.DefaultActionInvocation.invokeActionOnly(DefaultActionInvocation.java:291)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:254)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:176)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:263)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:133)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:207)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:207)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:190)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:75)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:94)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:243)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:270)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:176)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:190)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:187)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at net.ytoec.kernel.interceptor.SessionInterceptor.intercept(SessionInterceptor.java:121)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:248)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:52)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:498)
	at org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:434)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
2013-08-01 13:21:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:21:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:21:14  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 13:21:15  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:21:15  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:21:15  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: LP070823002250789(String)
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070823002250789(String), 2007082300225725(String), 31883K22000014(String), 1245794989(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-01 13:21:24.286(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t1(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 6675(Integer), 0(Integer), null, null, null
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 6675(Integer), 0(Integer), null, null, null
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 6675(Integer)
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 6675(Integer), 2.0(Double), LP070823002250789(String), null
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 6675(Integer), 2.0(Double), LP070823002250789(String), null
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 13:21:24  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:21:46  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-01 13:21:46  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: 6675(Integer), null, YTO(String), LP070823002250789(String), 2007082300225725(String), 31883K22000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t1(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-01 13:21:46  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_SEND_TASK (request_url,order_id,last_send_time,client_id,request_params,remark,task_flag_id,task_flag,tx_logistic_id) values (?, ?,now(),?,?,?,?,?,?); 
2013-08-01 13:21:46  DEBUG [24465587@qtp-19319578-2] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer), TAOBAO(String), logistics_interface=%3CRequestOrder%3E%0D%0A%3CecCompanyId%3ETaobao%3C%2FecCompanyId%3E%0D%0A%3ClogisticProviderID%3EYTO%3C%2FlogisticProviderID%3E%0D%0A%3CcustomerId%3E31883K22000014%3C%2FcustomerId%3E%0D%0A%3CtxLogisticID%3ELP070823002250789%3C%2FtxLogisticID%3E+%0D%0A%3CtradeNo%3E2007082300225725%3C%2FtradeNo%3E%0D%0A%3CmailNo%3E1245794989%3C%2FmailNo%3E+%0D%0A%3CtotalServiceFee%3E3200%3C%2FtotalServiceFee%3E%0D%0A%3CcodSplitFee%3E2000%3C%2FcodSplitFee%3E%0D%0A%3CbuyServiceFee%3E1000%3C%2FbuyServiceFee%3E%0D%0A%3CorderType%3E1%3C%2ForderType%3E%0D%0A%3CserviceType%3E1%3C%2FserviceType%3E+%0D%0A%3Csender%3E%0D%0A%3Cname%3E%E6%B5%8B%E8%AF%95t1%3C%2Fname%3E%0D%0A%3CpostCode%3E476000%3C%2FpostCode%3E%0D%0A%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A%3Cprov%3E%E6%B5%99%E6%B1%9F%3C%2Fprov%3E%0D%0A%3Ccity%3E%E6%9D%AD%E5%B7%9E%3C%2Fcity%3E%0D%0A%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A%3C%2Fsender%3E%0D%0A%3Creceiver%3E%0D%0A%3Cname%3E%E6%9D%8E%E5%9B%9B%3C%2Fname%3E%0D%0A%3CpostCode%3E200120%3C%2FpostCode%3E%0D%0A%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A%3Cprov%3E%E4%B8%8A%E6%B5%B7%3C%2Fprov%3E%0D%0A%3Ccity%3E%E4%B8%8A%E6%B5%B7%E5%B8%82%3C%2Fcity%3E%0D%0A%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A%3C%2Freceiver%3E%0D%0A%3CsendStartTime%3E2012-06-25+08%3A00%3A00%3C%2FsendStartTime%3E%0D%0A%3CsendEndTime%3E2012-06-25+12%3A00%3A00+%3C%2FsendEndTime%3E%0D%0A%3CgoodsValue%3E1900%3C%2FgoodsValue%3E%0D%0A%3CitemsValue%3E2000%3C%2FitemsValue%3E%0D%0A%3Citems%3E%0D%0A%3Citem%3E%0D%0A%3CitemName%3ENokia+N73%3C%2FitemName%3E%0D%0A%3Cnumber%3E2%3C%2Fnumber%3E%0D%0A%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A%3C%2Fitem%3E%0D%0A%3Citem%3E%0D%0A%3CitemName%3ENokia+N72%3C%2FitemName%3E%0D%0A%3Cnumber%3E1%3C%2Fnumber%3E%0D%0A%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A%3C%2Fitem%3E%0D%0A%3C%2Fitems%3E%0D%0A%3Cspecial%3E0%3C%2Fspecial%3E%0D%0A%3Cremark%3E%E6%98%93%E7%A2%8E%E5%93%81%3C%2Fremark%3E%0D%0A%3C%2FRequestOrder%3E&data_digest=mz13c28OqLAmBdmtIJJjeg%3D%3D&msg_type=ORDERCREATE(String), <responses><logisticProviderID>YTO</logisticProviderID><responseItems><response><txLogisticID>LP070823002250789</txLogisticID><success>true</success></response></responseItems></responses>(String), 9(Integer), 9(String), LP070823002250789(String)
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 13:22:34  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==> Parameters: K56566403(String), 1(String), 1(String)
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:24:59  DEBUG [19287111@qtp-19319578-5] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:30:01  DEBUG [23531307@qtp-19319578-7] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:34:51  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:34:51  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 13:34:51  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:35:04  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:35:04  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:35:04  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:35:05  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:35:05  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:35:05  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: LP070823002250789(String)
2013-08-01 13:35:05  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:35:05  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:35:05  DEBUG [32287612@qtp-19319578-10] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_log (tx_logistic_id, create_time) values (?, now()) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: LP070823002235939(String)
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO EC_CORE_ORDER (id, version, logistic_provider_id, tx_logistic_id, tradeNo, customer_id, mailNo, type, flag, create_time, send_start_time, send_end_time, insurance_value, package_or_not, special, remark, client_id, status, line_type, weight, sign_price, vip_id, order_type,service_type,goods_value,items_value, total_service_fee,buy_service_fee,cod_split_fee,partitionDate,freight_type,freight,trim_freight) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?,current_timestamp, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?,?,?,?,?,?,?) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: null, null, YTO(String), LP070823002235939(String), 2007082300225725(String), 31883K22000014(String), 12457945008(String), null, null, 2012-06-25 08:00:00.0(Timestamp), 2012-06-25 12:00:00.0(Timestamp), 0.0(Float), null, 0(String), 易碎品(String), TAOBAO(String), 0(String), 0(String), null, 0.0(Float), null, 1(Integer), 1(Long), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), 2013-08-01 13:37:24.217(Timestamp), 1(String), 0.0(Double), 0.0(Double)
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 测试t1(String), 476000(String), 231234134(String), 13575745195(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 0(String), 6677(Integer), 0(Integer), null, null, null
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_TRADERINFO(id,name, post_code,phone,mobile,prov,city,district,address,create_Time,trade_type,order_id,partitionDate,numProv,numCity,numDistrict,remark) values(?, ?, ?, ?, ?, ?,?, ?, ?, current_timestamp, ?,?,sysdate(),?,?,?,?) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 李四(String), 200120(String), 231234134(String), 13575745195(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 1(String), 6677(Integer), 0(Integer), null, null, null
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: INSERT INTO ec_core_build_search (create_time,order_id,build_task)VALUES(NOW(),?, '0') 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 6677(Integer)
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N73(String), 2(Integer), null, 6677(Integer), 2.0(Double), LP070823002235939(String), null
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_PRODUCT(id,item_name, item_number, remark, order_id,item_value, tx_logistic_id, mailNo,partitionDate) values(?, ?, ?, ?, ?,?, ?, ?,sysdate()) 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: null, Nokia N72(String), 1(Integer), null, 6677(Integer), 2.0(Double), LP070823002235939(String), null
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 13:37:24  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 13:37:30  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into ec_core_order_print ( id ,version ,logistic_provider_id ,tx_logistic_id ,tradeNo ,customer_id ,mailNo ,type ,flag ,create_time ,update_time ,send_start_time ,send_end_time ,insurance_value ,package_or_not ,special ,remark ,client_id ,status ,weight ,sign_price ,vip_id ,line_type ,weight_update_flag ,order_type ,service_type ,goods_value ,items_value ,total_service_fee ,buy_service_fee ,cod_split_fee ,accept_time ,partitiondate ,freight_type ,freight ,trim_freight ,is_combine ,is_print ,is_print_send ,is_send ,parent_id ,first_product_name ,product_name ,buy_name ,buy_mobile ,buy_telphone ,buy_fulladdress ,buy_prov ,buy_city ,buy_district ,buy_address ,buy_postcode ,sale_name ,sale_mobile ,sale_telphone ,sale_fulladdress ,sale_prov ,sale_city ,sale_district ,sale_address ,old_price ,join_num ) values ( ? ,? ,? ,? ,? ,? ,? ,? ,? ,now() ,now() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,sysdate() ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ) 
2013-08-01 13:37:30  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: 6677(Integer), null, YTO(String), LP070823002235939(String), 2007082300225725(String), 31883K22000014(String), (String), (String), null, 2012-06-25 00:00:00.0(Timestamp), 2012-06-25 00:00:00.0(Timestamp), null, null, 0(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), TAOBAO(String), 0(String), null, null, null, 0(String), null, 1(Integer), 1(Integer), 1900.0(Double), 2000.0(Double), 3200.0(Double), 1000.0(Double), 2000.0(Double), null, null, null, null, N(String), N(String), N(String), N(String), 0(Integer), Nokia N73(String), <dd>Nokia N73,,,2,,,2.0</dd><dd>Nokia N72,,,1,,,2.0</dd>(String), 李四(String), 13575745195(String), 231234134(String), 上海上海市华星科技大厦9层(String), 上海(String), 上海市(String), null, 华星科技大厦9层(String), 476000(String), 测试t1(String), 13575745195(String), 231234134(String), 浙江杭州华星科技大厦9层(String), 浙江(String), 杭州(String), null, 华星科技大厦9层(String), 1900.0(Double), 0(Integer)
2013-08-01 13:37:30  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_SEND_TASK (request_url,order_id,last_send_time,client_id,request_params,remark,task_flag_id,task_flag,tx_logistic_id) values (?, ?,now(),?,?,?,?,?,?); 
2013-08-01 13:37:30  DEBUG [22711600@qtp-19319578-9] (Slf4jImpl.java:28) - ==> Parameters: null, 0(Integer), TAOBAO(String), logistics_interface=%3CRequestOrder%3E%0D%0A%3CecCompanyId%3ETaobao%3C%2FecCompanyId%3E%0D%0A%3ClogisticProviderID%3EYTO%3C%2FlogisticProviderID%3E%0D%0A%3CcustomerId%3E31883K22000014%3C%2FcustomerId%3E%0D%0A%3CtxLogisticID%3ELP070823002235939%3C%2FtxLogisticID%3E+%0D%0A%3CtradeNo%3E2007082300225725%3C%2FtradeNo%3E%0D%0A%3CmailNo%3E12457945008%3C%2FmailNo%3E+%0D%0A%3CtotalServiceFee%3E3200%3C%2FtotalServiceFee%3E%0D%0A%3CcodSplitFee%3E2000%3C%2FcodSplitFee%3E%0D%0A%3CbuyServiceFee%3E1000%3C%2FbuyServiceFee%3E%0D%0A%3CorderType%3E1%3C%2ForderType%3E%0D%0A%3CserviceType%3E1%3C%2FserviceType%3E+%0D%0A%3Csender%3E%0D%0A%3Cname%3E%E6%B5%8B%E8%AF%95t1%3C%2Fname%3E%0D%0A%3CpostCode%3E476000%3C%2FpostCode%3E%0D%0A%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A%3Cprov%3E%E6%B5%99%E6%B1%9F%3C%2Fprov%3E%0D%0A%3Ccity%3E%E6%9D%AD%E5%B7%9E%3C%2Fcity%3E%0D%0A%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A%3C%2Fsender%3E%0D%0A%3Creceiver%3E%0D%0A%3Cname%3E%E6%9D%8E%E5%9B%9B%3C%2Fname%3E%0D%0A%3CpostCode%3E200120%3C%2FpostCode%3E%0D%0A%3Cphone%3E231234134%3C%2Fphone%3E%0D%0A%3Cmobile%3E13575745195%3C%2Fmobile%3E%0D%0A%3Cprov%3E%E4%B8%8A%E6%B5%B7%3C%2Fprov%3E%0D%0A%3Ccity%3E%E4%B8%8A%E6%B5%B7%E5%B8%82%3C%2Fcity%3E%0D%0A%3Caddress%3E%E5%8D%8E%E6%98%9F%E7%A7%91%E6%8A%80%E5%A4%A7%E5%8E%A69%E5%B1%82%3C%2Faddress%3E%0D%0A%3C%2Freceiver%3E%0D%0A%3CsendStartTime%3E2012-06-25+08%3A00%3A00%3C%2FsendStartTime%3E%0D%0A%3CsendEndTime%3E2012-06-25+12%3A00%3A00+%3C%2FsendEndTime%3E%0D%0A%3CgoodsValue%3E1900%3C%2FgoodsValue%3E%0D%0A%3CitemsValue%3E2000%3C%2FitemsValue%3E%0D%0A%3Citems%3E%0D%0A%3Citem%3E%0D%0A%3CitemName%3ENokia+N73%3C%2FitemName%3E%0D%0A%3Cnumber%3E2%3C%2Fnumber%3E%0D%0A%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A%3C%2Fitem%3E%0D%0A%3Citem%3E%0D%0A%3CitemName%3ENokia+N72%3C%2FitemName%3E%0D%0A%3Cnumber%3E1%3C%2Fnumber%3E%0D%0A%3CitemValue%3E2%3C%2FitemValue%3E%0D%0A%3C%2Fitem%3E%0D%0A%3C%2Fitems%3E%0D%0A%3Cspecial%3E0%3C%2Fspecial%3E%0D%0A%3Cremark%3E%E6%98%93%E7%A2%8E%E5%93%81%3C%2Fremark%3E%0D%0A%3C%2FRequestOrder%3E&data_digest=Lq3jieE%2FLkYlhVUtd52kCg%3D%3D&msg_type=ORDERCREATE(String), <responses><logisticProviderID>YTO</logisticProviderID><responseItems><response><txLogisticID>LP070823002235939</txLogisticID><success>true</success></response></responseItems></responses>(String), 9(Integer), 9(String), LP070823002235939(String)
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 32014(Integer)
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.customer_id IN ( ? ) AND t.mjIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 13:40:08  DEBUG [11612164@qtp-19319578-12] (Slf4jImpl.java:28) - ==> Parameters: 32014K10000903(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 15:19:22  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_name = BINARY(?) AND user_password = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND relational_query=? AND type=? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 1(String), 1(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE id = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: insert into EC_CORE_STATS_MESSAGE(id,stats_type, stats_reason, remark,login_time,logout_time,user_id) values(?, ?, ?, ?, ?, ?, ?) 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 0(String), net.ytoec.kernel.dataobject.User@40bd(String), w00132:登录系统,ip:127.0.0.1,ip:127.0.0.1,ip:127.0.0.1(String), 2013-08-01 15:19:56.337(Timestamp), null, 16573(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: UPDATE EC_CORE_USER SET parentId=?, user_name=?, user_password=?, tele_phone=?, mobile_phone=?, address_province=?, address_city=?, address_district=?, address_street=?, sex=?, shop_name=?, shop_account=?, mail=?, card_type=?, card_no=?, user_type=?, user_source=?, user_state=?, user_level=?, create_user=?, update_time=now(), remark=?, site=?, user_name_text=?, user_code = ?, login_time = ?, taobao_encode_key = ?, field001 = ?, field002 = ?, field003 = ?, binded_customer_id = ?, client_id = ? ,child_type = ? WHERE id = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: null, w00132(String), 4QrcOUm6Wau+VuBX8g+IPg==(String),  0951-6132509(String), 15909611338(String), 天津(String), 天津市(String), 和平区(String), 111(String),  M(String), null, null, huhuaiwent@163.com(String),  1(String), null, 2(String), null, 1(String), null, null, null, w00132(String), 宁夏圆顺通物流有限公司(String), w00132(String), 2013-08-01 15:19:56.337(Timestamp), 16573(String), 120000(String), ,MTEx,M1BF,MTEx(String), null, VjYy(String), MTIz(String), (String), 16573(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_admin(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 93(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 94(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_kefu(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 95(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_wangdian_caiwu(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 96(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 97(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_kefu(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 98(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_maijia_caiwu(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 99(Integer)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 2(String), permission_pingtai(String)
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 15:19:56  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 100(Integer)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER U WHERE U.PARENTID = ? order by u.login_time desc 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE user_state= ? and site_code = ? order by cteate_time desc 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 1(String), w00132(String)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_column where column_code = ? 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: yitong_01(String)
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select * from eop_cms_article WHERE column_id = ? and reader_type in(?,'0') ORDER BY seq asc,create_time desc limit ? 
2013-08-01 15:19:57  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 34(Integer), 2(String), 6(Integer)
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER_CUSTOM WHERE user_name=? AND binded_user_name=? AND type=? 
2013-08-01 15:19:58  DEBUG [30567233@qtp-33020593-2] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), w00132(String), 3(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-22(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-23(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-24(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-25(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-26(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-27(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-28(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-29(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-30(String)
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM ec_core_mailno_tendency t WHERE t.site_id = ? AND t.mailno_create_time = ? ORDER BY t.partitiondate DESC 
2013-08-01 15:19:58  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 16573(Integer), 2013-07-31(String)
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:20:00  DEBUG [19689176@qtp-33020593-4] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 15:20:25  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 15:20:31  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:20:31  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT c.id, c.channel_key, c.channel_value, c.ip_address, c.create_time, c.update_time, c.clientId, c.parternId, c.ip, c.isSend, c.isPrint, c.vip, c.line_type FROM EC_CORE_CHANNEL_INFO c order by create_time desc 
2013-08-01 15:20:31  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:27:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:28:46  DEBUG [32880125@qtp-33020593-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:33:48  DEBUG [25468551@qtp-33020593-9] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:38:51  DEBUG [18698774@qtp-33020593-13] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 15:42:27  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD_CONTRACT_AREA WHERE add_userName = ? AND account_type = ? 
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 2(String)
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USERTHREAD WHERE site_code = ? and user_state=1 
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String)
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:53:08  DEBUG [18975489@qtp-33020593-14] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:54:09  DEBUG [14100610@qtp-33020593-15] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 15:59:11  DEBUG [19113084@qtp-33020593-17] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:04:14  DEBUG [5385156@qtp-33020593-20] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:09:17  DEBUG [20412431@qtp-33020593-23] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:14:20  DEBUG [2166653@qtp-33020593-26] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:22:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:22:12  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:22:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:25  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:25  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:22:25  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:22:25  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:26  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:22:26  DEBUG [3559937@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:22:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:22:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:22:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:22:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:23:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:23:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:23:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:23:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:23:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:24:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:24:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:25:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:25:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:25:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:25:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:25:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:26:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:26:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:26:46  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:26:46  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:26:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:26:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:27:27  DEBUG [28288158@qtp-10612370-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:27:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:27:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:28:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:28:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:28:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:28:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:28:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:29:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:29:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:29:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:29:26  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:29:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:29:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:29:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:29:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:30:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:30:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:30:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:34:31  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:34:32  DEBUG [14388681@qtp-11898483-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:34:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:34:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:34:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:34:38  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:34:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:34:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:34:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:02  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:16  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:17  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:35:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:35:19  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:22  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:35:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:35:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:35:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:36:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:36:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:39:36  DEBUG [13969490@qtp-11898483-7] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:39:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:55  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:39:55  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:39:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:39:56  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:39:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:40:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:40:05  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:40:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:40:14  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:40:23  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:40:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:40:25  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:40:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:40:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 16:40:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-01 16:40:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 16:40:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-01 16:43:01  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:01  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:01  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:43:01  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:43:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:43:02  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:43:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:43:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:44:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:44:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:44:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:44:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:44:08  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:44:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:44:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:44:11  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:44:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:44:13  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:44:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 16:44:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-01 16:44:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 16:44:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:44:39  DEBUG [600799@qtp-4254883-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:49:42  DEBUG [9386980@qtp-4254883-6] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:04  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 16:53:04  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:09  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 16:53:10  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:12  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:15  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:18  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:53:20  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:24  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:27  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:53:30  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:36  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:53:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:53:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:53:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 16:54:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:54:46  DEBUG [241159@qtp-572135-3] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:54:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 16:54:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 16:54:56  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 16:54:58  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:54:58  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:54:58  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 16:55:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 16:55:07  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 16:55:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 16:55:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 16:55:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 16:55:43  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 16:55:47  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 16:59:50  DEBUG [19721072@qtp-572135-7] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ==>  Executing: select * from EC_CORE_MESSAGE_USER t where t.message_status = ? and t.user_id = ? 
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ==> Parameters: 0(Integer), 16573(Integer)
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_QUESTIONNAIRE t WHERE t.branck_id = ? AND t.wdIsRead = ? AND t.deal_status = ? AND t.partitiondate between ? and ? AND t.order_status = ? 
2013-08-01 17:04:52  DEBUG [25504405@qtp-572135-10] (Slf4jImpl.java:28) - ==> Parameters: w00132(String), 0(String), 2(String), 2013-07-23 00:00:00.0(Timestamp), 2013-08-02 00:00:00.0(Timestamp), 0(String)
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:49  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 17:15:49  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 17:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 17:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 17:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 17:15:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:15:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 17:16:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:16:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:16:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 17:16:31  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 17:16:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 17:16:32  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 17:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 17:16:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 17:16:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 17:16:35  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 17:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 17:16:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 17:16:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 17:16:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE conf_type = ? AND conf_key = ? 
2013-08-01 17:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 2(String), smtp(String)
2013-08-01 17:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_CONFIGCODE WHERE pid = ? order by seq asc 
2013-08-01 17:25:21  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 82(Integer)
2013-08-01 17:25:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:25:28  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 17:25:33  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: nextStarttime(String)
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key = ? 
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: weightUpdateTime(String)
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 17:25:34  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderCreate_key%(String)
2013-08-01 17:25:37  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:37  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: SELECT conf_text ,conf_value FROM EC_CORE_CONFIGCODE WHERE conf_key LIKE ? 
2013-08-01 17:25:37  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: %__orderUpdate_key%(String)
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search; 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index; 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_index_pressure; 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from ec_core_build_search_status_weight_version; 
2013-08-01 17:25:39  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TASK 
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select count(*) from EC_CORE_SEND_TaskToTB 
2013-08-01 17:25:40  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:59:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 17:59:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 17:59:41  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 1(String)
2013-08-01 17:59:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 17:59:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select t.id, t.region_number, t.region_name, t.parent_id, t.remark, t.create_time, t.update_time from EC_CORE_REGION t 
2013-08-01 17:59:41  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==>  Executing: SELECT * FROM EC_CORE_USER WHERE user_type = ? 
2013-08-01 17:59:42  DEBUG [timerFactory] (Slf4jImpl.java:28) - ==> Parameters: 2(String)
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:42  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:45  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:48  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 17:59:50  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-8] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:51  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-2] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:54  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-7] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-3] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 17:59:57  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-9] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-1] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-10] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_build_search b,ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 order by b.id asc limit ? 
2013-08-01 18:00:00  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer)
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:03  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, o.order_type as orderType, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-5] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_index_pressure c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ooo Connection Opened
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-4] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==>  Executing: select o.id as id,o.mailNo as mailNo,o.status as status,t.prov as prov,s.prov as provF, o.create_time as createTime,o.accept_time as acceptTime,o.customer_id as customerId, t.name as name,t.phone as phone,t.mobile as mobile,t.numProv as numProv, t.city as city,t.district as district,o.weight as weight,s.numProv as numProvF, s.city as cityF,o.tx_logistic_id as txLogisticId, t.address as address,o.trim_freight as trimFreight,o.freight_type as freightType, o.line_type as lineType,b.build_task as buildTask,b.mail_no as oldMailNo,o.partitiondate as partitiondate, o.type as holdTime from ec_core_order o, ec_core_traderinfo t ,ec_core_traderinfo s, (select id ,order_id,build_task,mail_no from ec_core_build_search_status_weight_version c order by c.id asc limit ?) as b where b.order_id=o.id and o.id=t.order_id and o.id=s.order_id and t.trade_type=1 and s.trade_type=0 and o.partitiondate >=? and o.partitiondate <= ? and t.partitiondate >=? and t.partitiondate <= ? and s.partitiondate >=? and s.partitiondate <= ?; 
2013-08-01 18:00:06  DEBUG [org.springframework.scheduling.quartz.SchedulerFactoryBean#0_Worker-6] (Slf4jImpl.java:28) - ==> Parameters: 50000(Integer), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String), 2013-07-02(String), 2013-08-01(String)
